import { IBranch, IMedia } from '../coop-types'
import { IOrganization } from '../lands-types/organization'
import { IAuditable, ITimeStamps, TEntityId } from '../common'
import { IGeneratedReport } from '../lands-types/generated-report'

export type TUserType = 'owner' | 'employee' | 'member' | 'ban'

// api/v1/authentication/current
export interface IAuthContext<TUser = IUserBase | undefined> {
    user?: TUser
    organization?: IOrganization
    branch?: IBranch
    reports: IGeneratedReport[]
    role: string[]
}

// api/v1/authentication/current/user
export interface IUserBase extends ITimeStamps, IAuditable {
    id: TEntityId

    media_id: TEntityId
    media: IMedia // Generated by server

    api_key: string

    password: string
    birthdate?: Date

    user_name: string
    first_name?: string
    middle_name?: string
    last_name?: string
    full_name?: string
    suffix?: string

    email: string
    is_email_verified?: boolean

    type: TUserType

    contact_number: string
    is_contact_verified?: boolean
}

export interface IOwner extends IUserBase {
    type: 'owner'
}

export interface IEmployee extends IUserBase {
    type: 'employee'
}

export interface IMember extends IUserBase {
    type: 'member'
}
