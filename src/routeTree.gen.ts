/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OnboardingRouteImport } from './routes/onboarding/route'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as AccountRouteImport } from './routes/account/route'
import { Route as landingRouteImport } from './routes/(landing)/route'
import { Route as OnboardingIndexImport } from './routes/onboarding/index'
import { Route as AccountIndexImport } from './routes/account/index'
import { Route as landingIndexImport } from './routes/(landing)/index'
import { Route as OrgOrgnameImport } from './routes/org/$orgname'
import { Route as OnboardingSetupOrgImport } from './routes/onboarding/setup-org'
import { Route as AuthForgotPasswordImport } from './routes/auth/forgot-password'
import { Route as AccountSecurityImport } from './routes/account/security'
import { Route as AccountQrImport } from './routes/account/qr'
import { Route as AccountProfileImport } from './routes/account/profile'
import { Route as landingTestImport } from './routes/(landing)/test'
import { Route as landingDevelopersImport } from './routes/(landing)/developers'
import { Route as landingContactImport } from './routes/(landing)/contact'
import { Route as landingAboutImport } from './routes/(landing)/about'
import { Route as OnboardingOrganizationRouteImport } from './routes/onboarding/organization/route'
import { Route as OnboardingOrganizationIndexImport } from './routes/onboarding/organization/index'
import { Route as OnboardingOrganizationOrganizationidImport } from './routes/onboarding/organization/$organization_id'
import { Route as OnboardingCreateBranchOrganizationidImport } from './routes/onboarding/create-branch.$organization_id'
import { Route as AuthPasswordResetResetIdImport } from './routes/auth/password-reset.$resetId'
import { Route as AccountVerifyEmailImport } from './routes/account/verify/email'
import { Route as AccountVerifyContactImport } from './routes/account/verify/contact'
import { Route as OrgOrgnameBranchBranchnameRouteImport } from './routes/org/$orgname/branch.$branchname/route'
import { Route as OrgOrgnameBranchBranchnameIndexImport } from './routes/org/$orgname/branch.$branchname/index'
import { Route as OrgOrgnameBranchBranchnamecommonUsersFootstepsImport } from './routes/org/$orgname/branch.$branchname/(common)/users-footsteps'
import { Route as OrgOrgnameBranchBranchnamecommonMyFootstepsImport } from './routes/org/$orgname/branch.$branchname/(common)/my-footsteps'
import { Route as OrgOrgnameBranchBranchnamecommonDashboardImport } from './routes/org/$orgname/branch.$branchname/(common)/dashboard'
import { Route as OrgOrgnameBranchBranchnameemployeeLoanIndexImport } from './routes/org/$orgname/branch.$branchname/(employee)/loan/index'
import { Route as OrgOrgnameBranchBranchnameemployeeApprovalsIndexImport } from './routes/org/$orgname/branch.$branchname/(employee)/approvals/index'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceTagTemplateImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/tag-template'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceHolidaysImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/holidays'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceCollateralImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/collateral'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/bills-and-coins'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/banks'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersViewMembersImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/view-members'
import { Route as OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionTemplateImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(employees)/permission-template'
import { Route as OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionManagementImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(employees)/permission-management'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/transaction-batch'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/payment-type'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionPaymentEntryImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/payment-entry'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionOnlineEntryImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/online-entry'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionFundMovementImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/fund-movement'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionCheckEntryImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/check-entry'
import { Route as OrgOrgnameBranchBranchnameemployeeLoanLoanStatusImport } from './routes/org/$orgname/branch.$branchname/(employee)/loan/loan-status'
import { Route as OrgOrgnameBranchBranchnameemployeeLoanLoanPurposeImport } from './routes/org/$orgname/branch.$branchname/(employee)/loan/loan-purpose'
import { Route as OrgOrgnameBranchBranchnameemployeeLoanLoanApplicationImport } from './routes/org/$orgname/branch.$branchname/(employee)/loan/loan-application'
import { Route as OrgOrgnameBranchBranchnameemployeeLoanIdImport } from './routes/org/$orgname/branch.$branchname/(employee)/loan/$id'
import { Route as OrgOrgnameBranchBranchnameemployeeAccountingComputationTypeImport } from './routes/org/$orgname/branch.$branchname/(employee)/accounting/computation-type'
import { Route as OrgOrgnameBranchBranchnameemployeeAccountingAccountsImport } from './routes/org/$orgname/branch.$branchname/(employee)/accounting/accounts'
import { Route as OrgOrgnameBranchBranchnamecommontimesheetsTimesheetsImport } from './routes/org/$orgname/branch.$branchname/(common)/(timesheets)/timesheets'
import { Route as OrgOrgnameBranchBranchnamecommontimesheetsMyTimesheetImport } from './routes/org/$orgname/branch.$branchname/(common)/(timesheets)/my-timesheet'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenancepaymentConfigurationPaymentTypeImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/(payment-configuration)/payment-type'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingPositiveImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-positive'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingNegativeImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-negative'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlDefinitionImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-definition'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlAccountsGroupingImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-accounts-grouping'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/(account-setup)/account-classification'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/(account-setup)/account-category'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/(access-and-onboarding)/invitation-code'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionAccountsGroupingsImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition-accounts-groupings'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-types'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-occupation'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-group'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-gender'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-classification'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-center'
import { Route as OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesViewEmployeesImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(employees)/employees/view-employees'
import { Route as OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesRolesManagementImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(employees)/employees/roles-management'
import { Route as OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesPermissionManagementImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(employees)/employees/permission-management'
import { Route as OrgOrgnameBranchBranchnamecommontimesheetsTimesheetUserIdRouteImport } from './routes/org/$orgname/branch.$branchname/(common)/(timesheets)/timesheet.user.$id/route'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/member-profile.$memberId.$settings/index'

// Create Virtual Routes

const AuthSignUpLazyImport = createFileRoute('/auth/sign-up')()
const AuthSignInLazyImport = createFileRoute('/auth/sign-in')()

// Create/Update Routes

const OnboardingRouteRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AccountRouteRoute = AccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRoute,
} as any)

const landingRouteRoute = landingRouteImport.update({
  id: '/(landing)',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingIndexRoute = OnboardingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => OnboardingRouteRoute,
} as any)

const AccountIndexRoute = AccountIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AccountRouteRoute,
} as any)

const landingIndexRoute = landingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => landingRouteRoute,
} as any)

const AuthSignUpLazyRoute = AuthSignUpLazyImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() => import('./routes/auth/sign-up.lazy').then((d) => d.Route))

const AuthSignInLazyRoute = AuthSignInLazyImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() => import('./routes/auth/sign-in.lazy').then((d) => d.Route))

const OrgOrgnameRoute = OrgOrgnameImport.update({
  id: '/org/$orgname',
  path: '/org/$orgname',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingSetupOrgRoute = OnboardingSetupOrgImport.update({
  id: '/setup-org',
  path: '/setup-org',
  getParentRoute: () => OnboardingRouteRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AccountSecurityRoute = AccountSecurityImport.update({
  id: '/security',
  path: '/security',
  getParentRoute: () => AccountRouteRoute,
} as any)

const AccountQrRoute = AccountQrImport.update({
  id: '/qr',
  path: '/qr',
  getParentRoute: () => AccountRouteRoute,
} as any)

const AccountProfileRoute = AccountProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AccountRouteRoute,
} as any)

const landingTestRoute = landingTestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => landingRouteRoute,
} as any)

const landingDevelopersRoute = landingDevelopersImport.update({
  id: '/developers',
  path: '/developers',
  getParentRoute: () => landingRouteRoute,
} as any)

const landingContactRoute = landingContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => landingRouteRoute,
} as any)

const landingAboutRoute = landingAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => landingRouteRoute,
} as any)

const OnboardingOrganizationRouteRoute =
  OnboardingOrganizationRouteImport.update({
    id: '/organization',
    path: '/organization',
    getParentRoute: () => OnboardingRouteRoute,
  } as any)

const OnboardingOrganizationIndexRoute =
  OnboardingOrganizationIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => OnboardingOrganizationRouteRoute,
  } as any)

const OnboardingOrganizationOrganizationidRoute =
  OnboardingOrganizationOrganizationidImport.update({
    id: '/$organization_id',
    path: '/$organization_id',
    getParentRoute: () => OnboardingOrganizationRouteRoute,
  } as any)

const OnboardingCreateBranchOrganizationidRoute =
  OnboardingCreateBranchOrganizationidImport.update({
    id: '/create-branch/$organization_id',
    path: '/create-branch/$organization_id',
    getParentRoute: () => OnboardingRouteRoute,
  } as any)

const AuthPasswordResetResetIdRoute = AuthPasswordResetResetIdImport.update({
  id: '/password-reset/$resetId',
  path: '/password-reset/$resetId',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AccountVerifyEmailRoute = AccountVerifyEmailImport.update({
  id: '/verify/email',
  path: '/verify/email',
  getParentRoute: () => AccountRouteRoute,
} as any)

const AccountVerifyContactRoute = AccountVerifyContactImport.update({
  id: '/verify/contact',
  path: '/verify/contact',
  getParentRoute: () => AccountRouteRoute,
} as any)

const OrgOrgnameBranchBranchnameRouteRoute =
  OrgOrgnameBranchBranchnameRouteImport.update({
    id: '/branch/$branchname',
    path: '/branch/$branchname',
    getParentRoute: () => OrgOrgnameRoute,
  } as any)

const OrgOrgnameBranchBranchnameIndexRoute =
  OrgOrgnameBranchBranchnameIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamecommonUsersFootstepsRoute =
  OrgOrgnameBranchBranchnamecommonUsersFootstepsImport.update({
    id: '/(common)/users-footsteps',
    path: '/users-footsteps',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamecommonMyFootstepsRoute =
  OrgOrgnameBranchBranchnamecommonMyFootstepsImport.update({
    id: '/(common)/my-footsteps',
    path: '/my-footsteps',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamecommonDashboardRoute =
  OrgOrgnameBranchBranchnamecommonDashboardImport.update({
    id: '/(common)/dashboard',
    path: '/dashboard',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnameemployeeLoanIndexRoute =
  OrgOrgnameBranchBranchnameemployeeLoanIndexImport.update({
    id: '/(employee)/loan/',
    path: '/loan/',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute =
  OrgOrgnameBranchBranchnameemployeeApprovalsIndexImport.update({
    id: '/(employee)/approvals/',
    path: '/approvals/',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamemaintenanceMaintenanceTagTemplateRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceTagTemplateImport.update({
    id: '/(maintenance)/maintenance/tag-template',
    path: '/maintenance/tag-template',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamemaintenanceMaintenanceHolidaysRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceHolidaysImport.update({
    id: '/(maintenance)/maintenance/holidays',
    path: '/maintenance/holidays',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamemaintenanceMaintenanceCollateralRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceCollateralImport.update({
    id: '/(maintenance)/maintenance/collateral',
    path: '/maintenance/collateral',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsImport.update({
    id: '/(maintenance)/maintenance/bills-and-coins',
    path: '/maintenance/bills-and-coins',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksImport.update({
    id: '/(maintenance)/maintenance/banks',
    path: '/maintenance/banks',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersViewMembersImport.update({
    id: '/(maintenance)/(members)/view-members',
    path: '/view-members',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionTemplateRoute =
  OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionTemplateImport.update(
    {
      id: '/(maintenance)/(employees)/permission-template',
      path: '/permission-template',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionManagementRoute =
  OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionManagementImport.update(
    {
      id: '/(maintenance)/(employees)/permission-management',
      path: '/permission-management',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchImport.update({
    id: '/(employee)/transaction/transaction-batch',
    path: '/transaction/transaction-batch',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeImport.update({
    id: '/(employee)/transaction/payment-type',
    path: '/transaction/payment-type',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnameemployeeTransactionPaymentEntryRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionPaymentEntryImport.update({
    id: '/(employee)/transaction/payment-entry',
    path: '/transaction/payment-entry',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnameemployeeTransactionOnlineEntryRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionOnlineEntryImport.update({
    id: '/(employee)/transaction/online-entry',
    path: '/transaction/online-entry',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnameemployeeTransactionFundMovementRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionFundMovementImport.update({
    id: '/(employee)/transaction/fund-movement',
    path: '/transaction/fund-movement',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnameemployeeTransactionCheckEntryRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionCheckEntryImport.update({
    id: '/(employee)/transaction/check-entry',
    path: '/transaction/check-entry',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnameemployeeLoanLoanStatusRoute =
  OrgOrgnameBranchBranchnameemployeeLoanLoanStatusImport.update({
    id: '/(employee)/loan/loan-status',
    path: '/loan/loan-status',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnameemployeeLoanLoanPurposeRoute =
  OrgOrgnameBranchBranchnameemployeeLoanLoanPurposeImport.update({
    id: '/(employee)/loan/loan-purpose',
    path: '/loan/loan-purpose',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnameemployeeLoanLoanApplicationRoute =
  OrgOrgnameBranchBranchnameemployeeLoanLoanApplicationImport.update({
    id: '/(employee)/loan/loan-application',
    path: '/loan/loan-application',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnameemployeeLoanIdRoute =
  OrgOrgnameBranchBranchnameemployeeLoanIdImport.update({
    id: '/(employee)/loan/$id',
    path: '/loan/$id',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnameemployeeAccountingComputationTypeRoute =
  OrgOrgnameBranchBranchnameemployeeAccountingComputationTypeImport.update({
    id: '/(employee)/accounting/computation-type',
    path: '/accounting/computation-type',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnameemployeeAccountingAccountsRoute =
  OrgOrgnameBranchBranchnameemployeeAccountingAccountsImport.update({
    id: '/(employee)/accounting/accounts',
    path: '/accounting/accounts',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamecommontimesheetsTimesheetsRoute =
  OrgOrgnameBranchBranchnamecommontimesheetsTimesheetsImport.update({
    id: '/(common)/(timesheets)/timesheets',
    path: '/timesheets',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamecommontimesheetsMyTimesheetRoute =
  OrgOrgnameBranchBranchnamecommontimesheetsMyTimesheetImport.update({
    id: '/(common)/(timesheets)/my-timesheet',
    path: '/my-timesheet',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamemaintenanceMaintenancepaymentConfigurationPaymentTypeRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenancepaymentConfigurationPaymentTypeImport.update(
    {
      id: '/(maintenance)/maintenance/(payment-configuration)/payment-type',
      path: '/maintenance/payment-type',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingPositiveRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingPositiveImport.update(
    {
      id: '/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-positive',
      path: '/maintenance/net-surplus-grouping-positive',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingNegativeRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingNegativeImport.update(
    {
      id: '/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-negative',
      path: '/maintenance/net-surplus-grouping-negative',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlDefinitionRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlDefinitionImport.update(
    {
      id: '/(maintenance)/maintenance/(general-ledger-management)/gl-definition',
      path: '/maintenance/gl-definition',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlAccountsGroupingRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlAccountsGroupingImport.update(
    {
      id: '/(maintenance)/maintenance/(general-ledger-management)/gl-accounts-grouping',
      path: '/maintenance/gl-accounts-grouping',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationImport.update(
    {
      id: '/(maintenance)/maintenance/(account-setup)/account-classification',
      path: '/maintenance/account-classification',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryImport.update(
    {
      id: '/(maintenance)/maintenance/(account-setup)/account-category',
      path: '/maintenance/account-category',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeImport.update(
    {
      id: '/(maintenance)/maintenance/(access-and-onboarding)/invitation-code',
      path: '/maintenance/invitation-code',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionAccountsGroupingsRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionAccountsGroupingsImport.update(
    {
      id: '/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition-accounts-groupings',
      path: '/maintenance/fs-definition-accounts-groupings',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionImport.update(
    {
      id: '/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition',
      path: '/maintenance/fs-definition',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesImport.update({
    id: '/(maintenance)/(members)/members/member-types',
    path: '/members/member-types',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationImport.update(
    {
      id: '/(maintenance)/(members)/members/member-occupation',
      path: '/members/member-occupation',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupImport.update({
    id: '/(maintenance)/(members)/members/member-group',
    path: '/members/member-group',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderImport.update({
    id: '/(maintenance)/(members)/members/member-gender',
    path: '/members/member-gender',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationImport.update(
    {
      id: '/(maintenance)/(members)/members/member-classification',
      path: '/members/member-classification',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterImport.update({
    id: '/(maintenance)/(members)/members/member-center',
    path: '/members/member-center',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesViewEmployeesRoute =
  OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesViewEmployeesImport.update(
    {
      id: '/(maintenance)/(employees)/employees/view-employees',
      path: '/employees/view-employees',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesRolesManagementRoute =
  OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesRolesManagementImport.update(
    {
      id: '/(maintenance)/(employees)/employees/roles-management',
      path: '/employees/roles-management',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesPermissionManagementRoute =
  OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesPermissionManagementImport.update(
    {
      id: '/(maintenance)/(employees)/employees/permission-management',
      path: '/employees/permission-management',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

const OrgOrgnameBranchBranchnamecommontimesheetsTimesheetUserIdRouteRoute =
  OrgOrgnameBranchBranchnamecommontimesheetsTimesheetUserIdRouteImport.update({
    id: '/(common)/(timesheets)/timesheet/user/$id',
    path: '/timesheet/user/$id',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)

const OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexImport.update(
    {
      id: '/(maintenance)/(members)/member-profile/$memberId/$settings/',
      path: '/member-profile/$memberId/$settings/',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(landing)': {
      id: '/(landing)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof landingRouteImport
      parentRoute: typeof rootRoute
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/organization': {
      id: '/onboarding/organization'
      path: '/organization'
      fullPath: '/onboarding/organization'
      preLoaderRoute: typeof OnboardingOrganizationRouteImport
      parentRoute: typeof OnboardingRouteImport
    }
    '/(landing)/about': {
      id: '/(landing)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof landingAboutImport
      parentRoute: typeof landingRouteImport
    }
    '/(landing)/contact': {
      id: '/(landing)/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof landingContactImport
      parentRoute: typeof landingRouteImport
    }
    '/(landing)/developers': {
      id: '/(landing)/developers'
      path: '/developers'
      fullPath: '/developers'
      preLoaderRoute: typeof landingDevelopersImport
      parentRoute: typeof landingRouteImport
    }
    '/(landing)/test': {
      id: '/(landing)/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof landingTestImport
      parentRoute: typeof landingRouteImport
    }
    '/account/profile': {
      id: '/account/profile'
      path: '/profile'
      fullPath: '/account/profile'
      preLoaderRoute: typeof AccountProfileImport
      parentRoute: typeof AccountRouteImport
    }
    '/account/qr': {
      id: '/account/qr'
      path: '/qr'
      fullPath: '/account/qr'
      preLoaderRoute: typeof AccountQrImport
      parentRoute: typeof AccountRouteImport
    }
    '/account/security': {
      id: '/account/security'
      path: '/security'
      fullPath: '/account/security'
      preLoaderRoute: typeof AccountSecurityImport
      parentRoute: typeof AccountRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof AuthRouteImport
    }
    '/onboarding/setup-org': {
      id: '/onboarding/setup-org'
      path: '/setup-org'
      fullPath: '/onboarding/setup-org'
      preLoaderRoute: typeof OnboardingSetupOrgImport
      parentRoute: typeof OnboardingRouteImport
    }
    '/org/$orgname': {
      id: '/org/$orgname'
      path: '/org/$orgname'
      fullPath: '/org/$orgname'
      preLoaderRoute: typeof OrgOrgnameImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/(landing)/': {
      id: '/(landing)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof landingIndexImport
      parentRoute: typeof landingRouteImport
    }
    '/account/': {
      id: '/account/'
      path: '/'
      fullPath: '/account/'
      preLoaderRoute: typeof AccountIndexImport
      parentRoute: typeof AccountRouteImport
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/'
      fullPath: '/onboarding/'
      preLoaderRoute: typeof OnboardingIndexImport
      parentRoute: typeof OnboardingRouteImport
    }
    '/account/verify/contact': {
      id: '/account/verify/contact'
      path: '/verify/contact'
      fullPath: '/account/verify/contact'
      preLoaderRoute: typeof AccountVerifyContactImport
      parentRoute: typeof AccountRouteImport
    }
    '/account/verify/email': {
      id: '/account/verify/email'
      path: '/verify/email'
      fullPath: '/account/verify/email'
      preLoaderRoute: typeof AccountVerifyEmailImport
      parentRoute: typeof AccountRouteImport
    }
    '/auth/password-reset/$resetId': {
      id: '/auth/password-reset/$resetId'
      path: '/password-reset/$resetId'
      fullPath: '/auth/password-reset/$resetId'
      preLoaderRoute: typeof AuthPasswordResetResetIdImport
      parentRoute: typeof AuthRouteImport
    }
    '/onboarding/create-branch/$organization_id': {
      id: '/onboarding/create-branch/$organization_id'
      path: '/create-branch/$organization_id'
      fullPath: '/onboarding/create-branch/$organization_id'
      preLoaderRoute: typeof OnboardingCreateBranchOrganizationidImport
      parentRoute: typeof OnboardingRouteImport
    }
    '/onboarding/organization/$organization_id': {
      id: '/onboarding/organization/$organization_id'
      path: '/$organization_id'
      fullPath: '/onboarding/organization/$organization_id'
      preLoaderRoute: typeof OnboardingOrganizationOrganizationidImport
      parentRoute: typeof OnboardingOrganizationRouteImport
    }
    '/onboarding/organization/': {
      id: '/onboarding/organization/'
      path: '/'
      fullPath: '/onboarding/organization/'
      preLoaderRoute: typeof OnboardingOrganizationIndexImport
      parentRoute: typeof OnboardingOrganizationRouteImport
    }
    '/org/$orgname/branch/$branchname': {
      id: '/org/$orgname/branch/$branchname'
      path: '/branch/$branchname'
      fullPath: '/org/$orgname/branch/$branchname'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameRouteImport
      parentRoute: typeof OrgOrgnameImport
    }
    '/org/$orgname/branch/$branchname/': {
      id: '/org/$orgname/branch/$branchname/'
      path: '/'
      fullPath: '/org/$orgname/branch/$branchname/'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameIndexImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(common)/dashboard': {
      id: '/org/$orgname/branch/$branchname/(common)/dashboard'
      path: '/dashboard'
      fullPath: '/org/$orgname/branch/$branchname/dashboard'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamecommonDashboardImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(common)/my-footsteps': {
      id: '/org/$orgname/branch/$branchname/(common)/my-footsteps'
      path: '/my-footsteps'
      fullPath: '/org/$orgname/branch/$branchname/my-footsteps'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamecommonMyFootstepsImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(common)/users-footsteps': {
      id: '/org/$orgname/branch/$branchname/(common)/users-footsteps'
      path: '/users-footsteps'
      fullPath: '/org/$orgname/branch/$branchname/users-footsteps'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamecommonUsersFootstepsImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(common)/(timesheets)/my-timesheet': {
      id: '/org/$orgname/branch/$branchname/(common)/(timesheets)/my-timesheet'
      path: '/my-timesheet'
      fullPath: '/org/$orgname/branch/$branchname/my-timesheet'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamecommontimesheetsMyTimesheetImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(common)/(timesheets)/timesheets': {
      id: '/org/$orgname/branch/$branchname/(common)/(timesheets)/timesheets'
      path: '/timesheets'
      fullPath: '/org/$orgname/branch/$branchname/timesheets'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamecommontimesheetsTimesheetsImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/accounting/accounts': {
      id: '/org/$orgname/branch/$branchname/(employee)/accounting/accounts'
      path: '/accounting/accounts'
      fullPath: '/org/$orgname/branch/$branchname/accounting/accounts'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeAccountingAccountsImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/accounting/computation-type': {
      id: '/org/$orgname/branch/$branchname/(employee)/accounting/computation-type'
      path: '/accounting/computation-type'
      fullPath: '/org/$orgname/branch/$branchname/accounting/computation-type'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeAccountingComputationTypeImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/loan/$id': {
      id: '/org/$orgname/branch/$branchname/(employee)/loan/$id'
      path: '/loan/$id'
      fullPath: '/org/$orgname/branch/$branchname/loan/$id'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeLoanIdImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/loan/loan-application': {
      id: '/org/$orgname/branch/$branchname/(employee)/loan/loan-application'
      path: '/loan/loan-application'
      fullPath: '/org/$orgname/branch/$branchname/loan/loan-application'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeLoanLoanApplicationImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/loan/loan-purpose': {
      id: '/org/$orgname/branch/$branchname/(employee)/loan/loan-purpose'
      path: '/loan/loan-purpose'
      fullPath: '/org/$orgname/branch/$branchname/loan/loan-purpose'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeLoanLoanPurposeImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/loan/loan-status': {
      id: '/org/$orgname/branch/$branchname/(employee)/loan/loan-status'
      path: '/loan/loan-status'
      fullPath: '/org/$orgname/branch/$branchname/loan/loan-status'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeLoanLoanStatusImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/check-entry': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/check-entry'
      path: '/transaction/check-entry'
      fullPath: '/org/$orgname/branch/$branchname/transaction/check-entry'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionCheckEntryImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/fund-movement': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/fund-movement'
      path: '/transaction/fund-movement'
      fullPath: '/org/$orgname/branch/$branchname/transaction/fund-movement'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionFundMovementImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/online-entry': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/online-entry'
      path: '/transaction/online-entry'
      fullPath: '/org/$orgname/branch/$branchname/transaction/online-entry'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionOnlineEntryImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/payment-entry': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/payment-entry'
      path: '/transaction/payment-entry'
      fullPath: '/org/$orgname/branch/$branchname/transaction/payment-entry'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentEntryImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/payment-type': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/payment-type'
      path: '/transaction/payment-type'
      fullPath: '/org/$orgname/branch/$branchname/transaction/payment-type'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/transaction-batch': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/transaction-batch'
      path: '/transaction/transaction-batch'
      fullPath: '/org/$orgname/branch/$branchname/transaction/transaction-batch'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(employees)/permission-management': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(employees)/permission-management'
      path: '/permission-management'
      fullPath: '/org/$orgname/branch/$branchname/permission-management'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionManagementImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(employees)/permission-template': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(employees)/permission-template'
      path: '/permission-template'
      fullPath: '/org/$orgname/branch/$branchname/permission-template'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionTemplateImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/view-members': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/view-members'
      path: '/view-members'
      fullPath: '/org/$orgname/branch/$branchname/view-members'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersViewMembersImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/banks': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/banks'
      path: '/maintenance/banks'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/banks'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/bills-and-coins': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/bills-and-coins'
      path: '/maintenance/bills-and-coins'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/bills-and-coins'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/collateral': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/collateral'
      path: '/maintenance/collateral'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/collateral'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceCollateralImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/holidays': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/holidays'
      path: '/maintenance/holidays'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/holidays'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceHolidaysImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/tag-template': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/tag-template'
      path: '/maintenance/tag-template'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/tag-template'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceTagTemplateImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/approvals/': {
      id: '/org/$orgname/branch/$branchname/(employee)/approvals/'
      path: '/approvals'
      fullPath: '/org/$orgname/branch/$branchname/approvals'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeApprovalsIndexImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(employee)/loan/': {
      id: '/org/$orgname/branch/$branchname/(employee)/loan/'
      path: '/loan'
      fullPath: '/org/$orgname/branch/$branchname/loan'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeLoanIndexImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/permission-management': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/permission-management'
      path: '/employees/permission-management'
      fullPath: '/org/$orgname/branch/$branchname/employees/permission-management'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesPermissionManagementImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/roles-management': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/roles-management'
      path: '/employees/roles-management'
      fullPath: '/org/$orgname/branch/$branchname/employees/roles-management'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesRolesManagementImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/view-employees': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/view-employees'
      path: '/employees/view-employees'
      fullPath: '/org/$orgname/branch/$branchname/employees/view-employees'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesViewEmployeesImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-center': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-center'
      path: '/members/member-center'
      fullPath: '/org/$orgname/branch/$branchname/members/member-center'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-classification': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-classification'
      path: '/members/member-classification'
      fullPath: '/org/$orgname/branch/$branchname/members/member-classification'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-gender': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-gender'
      path: '/members/member-gender'
      fullPath: '/org/$orgname/branch/$branchname/members/member-gender'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-group': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-group'
      path: '/members/member-group'
      fullPath: '/org/$orgname/branch/$branchname/members/member-group'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-occupation': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-occupation'
      path: '/members/member-occupation'
      fullPath: '/org/$orgname/branch/$branchname/members/member-occupation'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-types': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-types'
      path: '/members/member-types'
      fullPath: '/org/$orgname/branch/$branchname/members/member-types'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition'
      path: '/maintenance/fs-definition'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/fs-definition'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition-accounts-groupings': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition-accounts-groupings'
      path: '/maintenance/fs-definition-accounts-groupings'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/fs-definition-accounts-groupings'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionAccountsGroupingsImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(access-and-onboarding)/invitation-code': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(access-and-onboarding)/invitation-code'
      path: '/maintenance/invitation-code'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/invitation-code'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-category': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-category'
      path: '/maintenance/account-category'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/account-category'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-classification': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-classification'
      path: '/maintenance/account-classification'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/account-classification'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-accounts-grouping': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-accounts-grouping'
      path: '/maintenance/gl-accounts-grouping'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/gl-accounts-grouping'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlAccountsGroupingImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-definition': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-definition'
      path: '/maintenance/gl-definition'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/gl-definition'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlDefinitionImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-negative': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-negative'
      path: '/maintenance/net-surplus-grouping-negative'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/net-surplus-grouping-negative'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingNegativeImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-positive': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-positive'
      path: '/maintenance/net-surplus-grouping-positive'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/net-surplus-grouping-positive'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingPositiveImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(payment-configuration)/payment-type': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(payment-configuration)/payment-type'
      path: '/maintenance/payment-type'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/payment-type'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancepaymentConfigurationPaymentTypeImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(common)/(timesheets)/timesheet/user/$id': {
      id: '/org/$orgname/branch/$branchname/(common)/(timesheets)/timesheet/user/$id'
      path: '/timesheet/user/$id'
      fullPath: '/org/$orgname/branch/$branchname/timesheet/user/$id'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamecommontimesheetsTimesheetUserIdRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/member-profile/$memberId/$settings/': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/member-profile/$memberId/$settings/'
      path: '/member-profile/$memberId/$settings'
      fullPath: '/org/$orgname/branch/$branchname/member-profile/$memberId/$settings'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteImport
    }
  }
}

// Create and export the route tree

interface landingRouteRouteChildren {
  landingAboutRoute: typeof landingAboutRoute
  landingContactRoute: typeof landingContactRoute
  landingDevelopersRoute: typeof landingDevelopersRoute
  landingTestRoute: typeof landingTestRoute
  landingIndexRoute: typeof landingIndexRoute
}

const landingRouteRouteChildren: landingRouteRouteChildren = {
  landingAboutRoute: landingAboutRoute,
  landingContactRoute: landingContactRoute,
  landingDevelopersRoute: landingDevelopersRoute,
  landingTestRoute: landingTestRoute,
  landingIndexRoute: landingIndexRoute,
}

const landingRouteRouteWithChildren = landingRouteRoute._addFileChildren(
  landingRouteRouteChildren,
)

interface AccountRouteRouteChildren {
  AccountProfileRoute: typeof AccountProfileRoute
  AccountQrRoute: typeof AccountQrRoute
  AccountSecurityRoute: typeof AccountSecurityRoute
  AccountIndexRoute: typeof AccountIndexRoute
  AccountVerifyContactRoute: typeof AccountVerifyContactRoute
  AccountVerifyEmailRoute: typeof AccountVerifyEmailRoute
}

const AccountRouteRouteChildren: AccountRouteRouteChildren = {
  AccountProfileRoute: AccountProfileRoute,
  AccountQrRoute: AccountQrRoute,
  AccountSecurityRoute: AccountSecurityRoute,
  AccountIndexRoute: AccountIndexRoute,
  AccountVerifyContactRoute: AccountVerifyContactRoute,
  AccountVerifyEmailRoute: AccountVerifyEmailRoute,
}

const AccountRouteRouteWithChildren = AccountRouteRoute._addFileChildren(
  AccountRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSignInLazyRoute: typeof AuthSignInLazyRoute
  AuthSignUpLazyRoute: typeof AuthSignUpLazyRoute
  AuthPasswordResetResetIdRoute: typeof AuthPasswordResetResetIdRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSignInLazyRoute: AuthSignInLazyRoute,
  AuthSignUpLazyRoute: AuthSignUpLazyRoute,
  AuthPasswordResetResetIdRoute: AuthPasswordResetResetIdRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface OnboardingOrganizationRouteRouteChildren {
  OnboardingOrganizationOrganizationidRoute: typeof OnboardingOrganizationOrganizationidRoute
  OnboardingOrganizationIndexRoute: typeof OnboardingOrganizationIndexRoute
}

const OnboardingOrganizationRouteRouteChildren: OnboardingOrganizationRouteRouteChildren =
  {
    OnboardingOrganizationOrganizationidRoute:
      OnboardingOrganizationOrganizationidRoute,
    OnboardingOrganizationIndexRoute: OnboardingOrganizationIndexRoute,
  }

const OnboardingOrganizationRouteRouteWithChildren =
  OnboardingOrganizationRouteRoute._addFileChildren(
    OnboardingOrganizationRouteRouteChildren,
  )

interface OnboardingRouteRouteChildren {
  OnboardingOrganizationRouteRoute: typeof OnboardingOrganizationRouteRouteWithChildren
  OnboardingSetupOrgRoute: typeof OnboardingSetupOrgRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
  OnboardingCreateBranchOrganizationidRoute: typeof OnboardingCreateBranchOrganizationidRoute
}

const OnboardingRouteRouteChildren: OnboardingRouteRouteChildren = {
  OnboardingOrganizationRouteRoute:
    OnboardingOrganizationRouteRouteWithChildren,
  OnboardingSetupOrgRoute: OnboardingSetupOrgRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
  OnboardingCreateBranchOrganizationidRoute:
    OnboardingCreateBranchOrganizationidRoute,
}

const OnboardingRouteRouteWithChildren = OnboardingRouteRoute._addFileChildren(
  OnboardingRouteRouteChildren,
)

interface OrgOrgnameBranchBranchnameRouteRouteChildren {
  OrgOrgnameBranchBranchnameIndexRoute: typeof OrgOrgnameBranchBranchnameIndexRoute
  OrgOrgnameBranchBranchnamecommonDashboardRoute: typeof OrgOrgnameBranchBranchnamecommonDashboardRoute
  OrgOrgnameBranchBranchnamecommonMyFootstepsRoute: typeof OrgOrgnameBranchBranchnamecommonMyFootstepsRoute
  OrgOrgnameBranchBranchnamecommonUsersFootstepsRoute: typeof OrgOrgnameBranchBranchnamecommonUsersFootstepsRoute
  OrgOrgnameBranchBranchnamecommontimesheetsMyTimesheetRoute: typeof OrgOrgnameBranchBranchnamecommontimesheetsMyTimesheetRoute
  OrgOrgnameBranchBranchnamecommontimesheetsTimesheetsRoute: typeof OrgOrgnameBranchBranchnamecommontimesheetsTimesheetsRoute
  OrgOrgnameBranchBranchnameemployeeAccountingAccountsRoute: typeof OrgOrgnameBranchBranchnameemployeeAccountingAccountsRoute
  OrgOrgnameBranchBranchnameemployeeAccountingComputationTypeRoute: typeof OrgOrgnameBranchBranchnameemployeeAccountingComputationTypeRoute
  OrgOrgnameBranchBranchnameemployeeLoanIdRoute: typeof OrgOrgnameBranchBranchnameemployeeLoanIdRoute
  OrgOrgnameBranchBranchnameemployeeLoanLoanApplicationRoute: typeof OrgOrgnameBranchBranchnameemployeeLoanLoanApplicationRoute
  OrgOrgnameBranchBranchnameemployeeLoanLoanPurposeRoute: typeof OrgOrgnameBranchBranchnameemployeeLoanLoanPurposeRoute
  OrgOrgnameBranchBranchnameemployeeLoanLoanStatusRoute: typeof OrgOrgnameBranchBranchnameemployeeLoanLoanStatusRoute
  OrgOrgnameBranchBranchnameemployeeTransactionCheckEntryRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionCheckEntryRoute
  OrgOrgnameBranchBranchnameemployeeTransactionFundMovementRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionFundMovementRoute
  OrgOrgnameBranchBranchnameemployeeTransactionOnlineEntryRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionOnlineEntryRoute
  OrgOrgnameBranchBranchnameemployeeTransactionPaymentEntryRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentEntryRoute
  OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute
  OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute
  OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionManagementRoute: typeof OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionManagementRoute
  OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionTemplateRoute: typeof OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionTemplateRoute
  OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceCollateralRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceCollateralRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceHolidaysRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceHolidaysRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceTagTemplateRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceTagTemplateRoute
  OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute: typeof OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute
  OrgOrgnameBranchBranchnameemployeeLoanIndexRoute: typeof OrgOrgnameBranchBranchnameemployeeLoanIndexRoute
  OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesPermissionManagementRoute: typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesPermissionManagementRoute
  OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesRolesManagementRoute: typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesRolesManagementRoute
  OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesViewEmployeesRoute: typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesViewEmployeesRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionAccountsGroupingsRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionAccountsGroupingsRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlAccountsGroupingRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlAccountsGroupingRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlDefinitionRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlDefinitionRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingNegativeRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingNegativeRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingPositiveRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingPositiveRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenancepaymentConfigurationPaymentTypeRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancepaymentConfigurationPaymentTypeRoute
  OrgOrgnameBranchBranchnamecommontimesheetsTimesheetUserIdRouteRoute: typeof OrgOrgnameBranchBranchnamecommontimesheetsTimesheetUserIdRouteRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute
}

const OrgOrgnameBranchBranchnameRouteRouteChildren: OrgOrgnameBranchBranchnameRouteRouteChildren =
  {
    OrgOrgnameBranchBranchnameIndexRoute: OrgOrgnameBranchBranchnameIndexRoute,
    OrgOrgnameBranchBranchnamecommonDashboardRoute:
      OrgOrgnameBranchBranchnamecommonDashboardRoute,
    OrgOrgnameBranchBranchnamecommonMyFootstepsRoute:
      OrgOrgnameBranchBranchnamecommonMyFootstepsRoute,
    OrgOrgnameBranchBranchnamecommonUsersFootstepsRoute:
      OrgOrgnameBranchBranchnamecommonUsersFootstepsRoute,
    OrgOrgnameBranchBranchnamecommontimesheetsMyTimesheetRoute:
      OrgOrgnameBranchBranchnamecommontimesheetsMyTimesheetRoute,
    OrgOrgnameBranchBranchnamecommontimesheetsTimesheetsRoute:
      OrgOrgnameBranchBranchnamecommontimesheetsTimesheetsRoute,
    OrgOrgnameBranchBranchnameemployeeAccountingAccountsRoute:
      OrgOrgnameBranchBranchnameemployeeAccountingAccountsRoute,
    OrgOrgnameBranchBranchnameemployeeAccountingComputationTypeRoute:
      OrgOrgnameBranchBranchnameemployeeAccountingComputationTypeRoute,
    OrgOrgnameBranchBranchnameemployeeLoanIdRoute:
      OrgOrgnameBranchBranchnameemployeeLoanIdRoute,
    OrgOrgnameBranchBranchnameemployeeLoanLoanApplicationRoute:
      OrgOrgnameBranchBranchnameemployeeLoanLoanApplicationRoute,
    OrgOrgnameBranchBranchnameemployeeLoanLoanPurposeRoute:
      OrgOrgnameBranchBranchnameemployeeLoanLoanPurposeRoute,
    OrgOrgnameBranchBranchnameemployeeLoanLoanStatusRoute:
      OrgOrgnameBranchBranchnameemployeeLoanLoanStatusRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionCheckEntryRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionCheckEntryRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionFundMovementRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionFundMovementRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionOnlineEntryRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionOnlineEntryRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionPaymentEntryRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionPaymentEntryRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute,
    OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionManagementRoute:
      OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionManagementRoute,
    OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionTemplateRoute:
      OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionTemplateRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceCollateralRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceCollateralRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceHolidaysRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceHolidaysRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceTagTemplateRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceTagTemplateRoute,
    OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute:
      OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute,
    OrgOrgnameBranchBranchnameemployeeLoanIndexRoute:
      OrgOrgnameBranchBranchnameemployeeLoanIndexRoute,
    OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesPermissionManagementRoute:
      OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesPermissionManagementRoute,
    OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesRolesManagementRoute:
      OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesRolesManagementRoute,
    OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesViewEmployeesRoute:
      OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesViewEmployeesRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionAccountsGroupingsRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionAccountsGroupingsRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlAccountsGroupingRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlAccountsGroupingRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlDefinitionRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlDefinitionRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingNegativeRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingNegativeRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingPositiveRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingPositiveRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenancepaymentConfigurationPaymentTypeRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenancepaymentConfigurationPaymentTypeRoute,
    OrgOrgnameBranchBranchnamecommontimesheetsTimesheetUserIdRouteRoute:
      OrgOrgnameBranchBranchnamecommontimesheetsTimesheetUserIdRouteRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute,
  }

const OrgOrgnameBranchBranchnameRouteRouteWithChildren =
  OrgOrgnameBranchBranchnameRouteRoute._addFileChildren(
    OrgOrgnameBranchBranchnameRouteRouteChildren,
  )

interface OrgOrgnameRouteChildren {
  OrgOrgnameBranchBranchnameRouteRoute: typeof OrgOrgnameBranchBranchnameRouteRouteWithChildren
}

const OrgOrgnameRouteChildren: OrgOrgnameRouteChildren = {
  OrgOrgnameBranchBranchnameRouteRoute:
    OrgOrgnameBranchBranchnameRouteRouteWithChildren,
}

const OrgOrgnameRouteWithChildren = OrgOrgnameRoute._addFileChildren(
  OrgOrgnameRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof landingIndexRoute
  '/account': typeof AccountRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/onboarding/organization': typeof OnboardingOrganizationRouteRouteWithChildren
  '/about': typeof landingAboutRoute
  '/contact': typeof landingContactRoute
  '/developers': typeof landingDevelopersRoute
  '/test': typeof landingTestRoute
  '/account/profile': typeof AccountProfileRoute
  '/account/qr': typeof AccountQrRoute
  '/account/security': typeof AccountSecurityRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/onboarding/setup-org': typeof OnboardingSetupOrgRoute
  '/org/$orgname': typeof OrgOrgnameRouteWithChildren
  '/auth/sign-in': typeof AuthSignInLazyRoute
  '/auth/sign-up': typeof AuthSignUpLazyRoute
  '/account/': typeof AccountIndexRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/account/verify/contact': typeof AccountVerifyContactRoute
  '/account/verify/email': typeof AccountVerifyEmailRoute
  '/auth/password-reset/$resetId': typeof AuthPasswordResetResetIdRoute
  '/onboarding/create-branch/$organization_id': typeof OnboardingCreateBranchOrganizationidRoute
  '/onboarding/organization/$organization_id': typeof OnboardingOrganizationOrganizationidRoute
  '/onboarding/organization/': typeof OnboardingOrganizationIndexRoute
  '/org/$orgname/branch/$branchname': typeof OrgOrgnameBranchBranchnameRouteRouteWithChildren
  '/org/$orgname/branch/$branchname/': typeof OrgOrgnameBranchBranchnameIndexRoute
  '/org/$orgname/branch/$branchname/dashboard': typeof OrgOrgnameBranchBranchnamecommonDashboardRoute
  '/org/$orgname/branch/$branchname/my-footsteps': typeof OrgOrgnameBranchBranchnamecommonMyFootstepsRoute
  '/org/$orgname/branch/$branchname/users-footsteps': typeof OrgOrgnameBranchBranchnamecommonUsersFootstepsRoute
  '/org/$orgname/branch/$branchname/my-timesheet': typeof OrgOrgnameBranchBranchnamecommontimesheetsMyTimesheetRoute
  '/org/$orgname/branch/$branchname/timesheets': typeof OrgOrgnameBranchBranchnamecommontimesheetsTimesheetsRoute
  '/org/$orgname/branch/$branchname/accounting/accounts': typeof OrgOrgnameBranchBranchnameemployeeAccountingAccountsRoute
  '/org/$orgname/branch/$branchname/accounting/computation-type': typeof OrgOrgnameBranchBranchnameemployeeAccountingComputationTypeRoute
  '/org/$orgname/branch/$branchname/loan/$id': typeof OrgOrgnameBranchBranchnameemployeeLoanIdRoute
  '/org/$orgname/branch/$branchname/loan/loan-application': typeof OrgOrgnameBranchBranchnameemployeeLoanLoanApplicationRoute
  '/org/$orgname/branch/$branchname/loan/loan-purpose': typeof OrgOrgnameBranchBranchnameemployeeLoanLoanPurposeRoute
  '/org/$orgname/branch/$branchname/loan/loan-status': typeof OrgOrgnameBranchBranchnameemployeeLoanLoanStatusRoute
  '/org/$orgname/branch/$branchname/transaction/check-entry': typeof OrgOrgnameBranchBranchnameemployeeTransactionCheckEntryRoute
  '/org/$orgname/branch/$branchname/transaction/fund-movement': typeof OrgOrgnameBranchBranchnameemployeeTransactionFundMovementRoute
  '/org/$orgname/branch/$branchname/transaction/online-entry': typeof OrgOrgnameBranchBranchnameemployeeTransactionOnlineEntryRoute
  '/org/$orgname/branch/$branchname/transaction/payment-entry': typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentEntryRoute
  '/org/$orgname/branch/$branchname/transaction/payment-type': typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute
  '/org/$orgname/branch/$branchname/transaction/transaction-batch': typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute
  '/org/$orgname/branch/$branchname/permission-management': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionManagementRoute
  '/org/$orgname/branch/$branchname/permission-template': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionTemplateRoute
  '/org/$orgname/branch/$branchname/view-members': typeof OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute
  '/org/$orgname/branch/$branchname/maintenance/banks': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute
  '/org/$orgname/branch/$branchname/maintenance/bills-and-coins': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute
  '/org/$orgname/branch/$branchname/maintenance/collateral': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceCollateralRoute
  '/org/$orgname/branch/$branchname/maintenance/holidays': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceHolidaysRoute
  '/org/$orgname/branch/$branchname/maintenance/tag-template': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceTagTemplateRoute
  '/org/$orgname/branch/$branchname/approvals': typeof OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute
  '/org/$orgname/branch/$branchname/loan': typeof OrgOrgnameBranchBranchnameemployeeLoanIndexRoute
  '/org/$orgname/branch/$branchname/employees/permission-management': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesPermissionManagementRoute
  '/org/$orgname/branch/$branchname/employees/roles-management': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesRolesManagementRoute
  '/org/$orgname/branch/$branchname/employees/view-employees': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesViewEmployeesRoute
  '/org/$orgname/branch/$branchname/members/member-center': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute
  '/org/$orgname/branch/$branchname/members/member-classification': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute
  '/org/$orgname/branch/$branchname/members/member-gender': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute
  '/org/$orgname/branch/$branchname/members/member-group': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute
  '/org/$orgname/branch/$branchname/members/member-occupation': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute
  '/org/$orgname/branch/$branchname/members/member-types': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute
  '/org/$orgname/branch/$branchname/maintenance/fs-definition': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionRoute
  '/org/$orgname/branch/$branchname/maintenance/fs-definition-accounts-groupings': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionAccountsGroupingsRoute
  '/org/$orgname/branch/$branchname/maintenance/invitation-code': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute
  '/org/$orgname/branch/$branchname/maintenance/account-category': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute
  '/org/$orgname/branch/$branchname/maintenance/account-classification': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute
  '/org/$orgname/branch/$branchname/maintenance/gl-accounts-grouping': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlAccountsGroupingRoute
  '/org/$orgname/branch/$branchname/maintenance/gl-definition': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlDefinitionRoute
  '/org/$orgname/branch/$branchname/maintenance/net-surplus-grouping-negative': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingNegativeRoute
  '/org/$orgname/branch/$branchname/maintenance/net-surplus-grouping-positive': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingPositiveRoute
  '/org/$orgname/branch/$branchname/maintenance/payment-type': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancepaymentConfigurationPaymentTypeRoute
  '/org/$orgname/branch/$branchname/timesheet/user/$id': typeof OrgOrgnameBranchBranchnamecommontimesheetsTimesheetUserIdRouteRoute
  '/org/$orgname/branch/$branchname/member-profile/$memberId/$settings': typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthRouteRouteWithChildren
  '/about': typeof landingAboutRoute
  '/contact': typeof landingContactRoute
  '/developers': typeof landingDevelopersRoute
  '/test': typeof landingTestRoute
  '/account/profile': typeof AccountProfileRoute
  '/account/qr': typeof AccountQrRoute
  '/account/security': typeof AccountSecurityRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/onboarding/setup-org': typeof OnboardingSetupOrgRoute
  '/org/$orgname': typeof OrgOrgnameRouteWithChildren
  '/auth/sign-in': typeof AuthSignInLazyRoute
  '/auth/sign-up': typeof AuthSignUpLazyRoute
  '/': typeof landingIndexRoute
  '/account': typeof AccountIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/account/verify/contact': typeof AccountVerifyContactRoute
  '/account/verify/email': typeof AccountVerifyEmailRoute
  '/auth/password-reset/$resetId': typeof AuthPasswordResetResetIdRoute
  '/onboarding/create-branch/$organization_id': typeof OnboardingCreateBranchOrganizationidRoute
  '/onboarding/organization/$organization_id': typeof OnboardingOrganizationOrganizationidRoute
  '/onboarding/organization': typeof OnboardingOrganizationIndexRoute
  '/org/$orgname/branch/$branchname': typeof OrgOrgnameBranchBranchnameIndexRoute
  '/org/$orgname/branch/$branchname/dashboard': typeof OrgOrgnameBranchBranchnamecommonDashboardRoute
  '/org/$orgname/branch/$branchname/my-footsteps': typeof OrgOrgnameBranchBranchnamecommonMyFootstepsRoute
  '/org/$orgname/branch/$branchname/users-footsteps': typeof OrgOrgnameBranchBranchnamecommonUsersFootstepsRoute
  '/org/$orgname/branch/$branchname/my-timesheet': typeof OrgOrgnameBranchBranchnamecommontimesheetsMyTimesheetRoute
  '/org/$orgname/branch/$branchname/timesheets': typeof OrgOrgnameBranchBranchnamecommontimesheetsTimesheetsRoute
  '/org/$orgname/branch/$branchname/accounting/accounts': typeof OrgOrgnameBranchBranchnameemployeeAccountingAccountsRoute
  '/org/$orgname/branch/$branchname/accounting/computation-type': typeof OrgOrgnameBranchBranchnameemployeeAccountingComputationTypeRoute
  '/org/$orgname/branch/$branchname/loan/$id': typeof OrgOrgnameBranchBranchnameemployeeLoanIdRoute
  '/org/$orgname/branch/$branchname/loan/loan-application': typeof OrgOrgnameBranchBranchnameemployeeLoanLoanApplicationRoute
  '/org/$orgname/branch/$branchname/loan/loan-purpose': typeof OrgOrgnameBranchBranchnameemployeeLoanLoanPurposeRoute
  '/org/$orgname/branch/$branchname/loan/loan-status': typeof OrgOrgnameBranchBranchnameemployeeLoanLoanStatusRoute
  '/org/$orgname/branch/$branchname/transaction/check-entry': typeof OrgOrgnameBranchBranchnameemployeeTransactionCheckEntryRoute
  '/org/$orgname/branch/$branchname/transaction/fund-movement': typeof OrgOrgnameBranchBranchnameemployeeTransactionFundMovementRoute
  '/org/$orgname/branch/$branchname/transaction/online-entry': typeof OrgOrgnameBranchBranchnameemployeeTransactionOnlineEntryRoute
  '/org/$orgname/branch/$branchname/transaction/payment-entry': typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentEntryRoute
  '/org/$orgname/branch/$branchname/transaction/payment-type': typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute
  '/org/$orgname/branch/$branchname/transaction/transaction-batch': typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute
  '/org/$orgname/branch/$branchname/permission-management': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionManagementRoute
  '/org/$orgname/branch/$branchname/permission-template': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionTemplateRoute
  '/org/$orgname/branch/$branchname/view-members': typeof OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute
  '/org/$orgname/branch/$branchname/maintenance/banks': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute
  '/org/$orgname/branch/$branchname/maintenance/bills-and-coins': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute
  '/org/$orgname/branch/$branchname/maintenance/collateral': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceCollateralRoute
  '/org/$orgname/branch/$branchname/maintenance/holidays': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceHolidaysRoute
  '/org/$orgname/branch/$branchname/maintenance/tag-template': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceTagTemplateRoute
  '/org/$orgname/branch/$branchname/approvals': typeof OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute
  '/org/$orgname/branch/$branchname/loan': typeof OrgOrgnameBranchBranchnameemployeeLoanIndexRoute
  '/org/$orgname/branch/$branchname/employees/permission-management': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesPermissionManagementRoute
  '/org/$orgname/branch/$branchname/employees/roles-management': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesRolesManagementRoute
  '/org/$orgname/branch/$branchname/employees/view-employees': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesViewEmployeesRoute
  '/org/$orgname/branch/$branchname/members/member-center': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute
  '/org/$orgname/branch/$branchname/members/member-classification': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute
  '/org/$orgname/branch/$branchname/members/member-gender': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute
  '/org/$orgname/branch/$branchname/members/member-group': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute
  '/org/$orgname/branch/$branchname/members/member-occupation': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute
  '/org/$orgname/branch/$branchname/members/member-types': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute
  '/org/$orgname/branch/$branchname/maintenance/fs-definition': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionRoute
  '/org/$orgname/branch/$branchname/maintenance/fs-definition-accounts-groupings': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionAccountsGroupingsRoute
  '/org/$orgname/branch/$branchname/maintenance/invitation-code': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute
  '/org/$orgname/branch/$branchname/maintenance/account-category': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute
  '/org/$orgname/branch/$branchname/maintenance/account-classification': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute
  '/org/$orgname/branch/$branchname/maintenance/gl-accounts-grouping': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlAccountsGroupingRoute
  '/org/$orgname/branch/$branchname/maintenance/gl-definition': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlDefinitionRoute
  '/org/$orgname/branch/$branchname/maintenance/net-surplus-grouping-negative': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingNegativeRoute
  '/org/$orgname/branch/$branchname/maintenance/net-surplus-grouping-positive': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingPositiveRoute
  '/org/$orgname/branch/$branchname/maintenance/payment-type': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancepaymentConfigurationPaymentTypeRoute
  '/org/$orgname/branch/$branchname/timesheet/user/$id': typeof OrgOrgnameBranchBranchnamecommontimesheetsTimesheetUserIdRouteRoute
  '/org/$orgname/branch/$branchname/member-profile/$memberId/$settings': typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(landing)': typeof landingRouteRouteWithChildren
  '/account': typeof AccountRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/onboarding/organization': typeof OnboardingOrganizationRouteRouteWithChildren
  '/(landing)/about': typeof landingAboutRoute
  '/(landing)/contact': typeof landingContactRoute
  '/(landing)/developers': typeof landingDevelopersRoute
  '/(landing)/test': typeof landingTestRoute
  '/account/profile': typeof AccountProfileRoute
  '/account/qr': typeof AccountQrRoute
  '/account/security': typeof AccountSecurityRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/onboarding/setup-org': typeof OnboardingSetupOrgRoute
  '/org/$orgname': typeof OrgOrgnameRouteWithChildren
  '/auth/sign-in': typeof AuthSignInLazyRoute
  '/auth/sign-up': typeof AuthSignUpLazyRoute
  '/(landing)/': typeof landingIndexRoute
  '/account/': typeof AccountIndexRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/account/verify/contact': typeof AccountVerifyContactRoute
  '/account/verify/email': typeof AccountVerifyEmailRoute
  '/auth/password-reset/$resetId': typeof AuthPasswordResetResetIdRoute
  '/onboarding/create-branch/$organization_id': typeof OnboardingCreateBranchOrganizationidRoute
  '/onboarding/organization/$organization_id': typeof OnboardingOrganizationOrganizationidRoute
  '/onboarding/organization/': typeof OnboardingOrganizationIndexRoute
  '/org/$orgname/branch/$branchname': typeof OrgOrgnameBranchBranchnameRouteRouteWithChildren
  '/org/$orgname/branch/$branchname/': typeof OrgOrgnameBranchBranchnameIndexRoute
  '/org/$orgname/branch/$branchname/(common)/dashboard': typeof OrgOrgnameBranchBranchnamecommonDashboardRoute
  '/org/$orgname/branch/$branchname/(common)/my-footsteps': typeof OrgOrgnameBranchBranchnamecommonMyFootstepsRoute
  '/org/$orgname/branch/$branchname/(common)/users-footsteps': typeof OrgOrgnameBranchBranchnamecommonUsersFootstepsRoute
  '/org/$orgname/branch/$branchname/(common)/(timesheets)/my-timesheet': typeof OrgOrgnameBranchBranchnamecommontimesheetsMyTimesheetRoute
  '/org/$orgname/branch/$branchname/(common)/(timesheets)/timesheets': typeof OrgOrgnameBranchBranchnamecommontimesheetsTimesheetsRoute
  '/org/$orgname/branch/$branchname/(employee)/accounting/accounts': typeof OrgOrgnameBranchBranchnameemployeeAccountingAccountsRoute
  '/org/$orgname/branch/$branchname/(employee)/accounting/computation-type': typeof OrgOrgnameBranchBranchnameemployeeAccountingComputationTypeRoute
  '/org/$orgname/branch/$branchname/(employee)/loan/$id': typeof OrgOrgnameBranchBranchnameemployeeLoanIdRoute
  '/org/$orgname/branch/$branchname/(employee)/loan/loan-application': typeof OrgOrgnameBranchBranchnameemployeeLoanLoanApplicationRoute
  '/org/$orgname/branch/$branchname/(employee)/loan/loan-purpose': typeof OrgOrgnameBranchBranchnameemployeeLoanLoanPurposeRoute
  '/org/$orgname/branch/$branchname/(employee)/loan/loan-status': typeof OrgOrgnameBranchBranchnameemployeeLoanLoanStatusRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/check-entry': typeof OrgOrgnameBranchBranchnameemployeeTransactionCheckEntryRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/fund-movement': typeof OrgOrgnameBranchBranchnameemployeeTransactionFundMovementRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/online-entry': typeof OrgOrgnameBranchBranchnameemployeeTransactionOnlineEntryRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/payment-entry': typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentEntryRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/payment-type': typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/transaction-batch': typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(employees)/permission-management': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionManagementRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(employees)/permission-template': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesPermissionTemplateRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/view-members': typeof OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/banks': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/bills-and-coins': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/collateral': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceCollateralRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/holidays': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceHolidaysRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/tag-template': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceTagTemplateRoute
  '/org/$orgname/branch/$branchname/(employee)/approvals/': typeof OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute
  '/org/$orgname/branch/$branchname/(employee)/loan/': typeof OrgOrgnameBranchBranchnameemployeeLoanIndexRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/permission-management': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesPermissionManagementRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/roles-management': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesRolesManagementRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/view-employees': typeof OrgOrgnameBranchBranchnamemaintenanceemployeesEmployeesViewEmployeesRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-center': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-classification': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-gender': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-group': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-occupation': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-types': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition-accounts-groupings': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceFinancialStatementConfigurationFsDefinitionAccountsGroupingsRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(access-and-onboarding)/invitation-code': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-category': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-classification': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-accounts-grouping': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlAccountsGroupingRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-definition': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancegeneralLedgerManagementGlDefinitionRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-negative': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingNegativeRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-positive': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancenetSurplusHandlingNetSurplusGroupingPositiveRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(payment-configuration)/payment-type': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenancepaymentConfigurationPaymentTypeRoute
  '/org/$orgname/branch/$branchname/(common)/(timesheets)/timesheet/user/$id': typeof OrgOrgnameBranchBranchnamecommontimesheetsTimesheetUserIdRouteRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/member-profile/$memberId/$settings/': typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account'
    | '/auth'
    | '/onboarding'
    | '/onboarding/organization'
    | '/about'
    | '/contact'
    | '/developers'
    | '/test'
    | '/account/profile'
    | '/account/qr'
    | '/account/security'
    | '/auth/forgot-password'
    | '/onboarding/setup-org'
    | '/org/$orgname'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/account/'
    | '/onboarding/'
    | '/account/verify/contact'
    | '/account/verify/email'
    | '/auth/password-reset/$resetId'
    | '/onboarding/create-branch/$organization_id'
    | '/onboarding/organization/$organization_id'
    | '/onboarding/organization/'
    | '/org/$orgname/branch/$branchname'
    | '/org/$orgname/branch/$branchname/'
    | '/org/$orgname/branch/$branchname/dashboard'
    | '/org/$orgname/branch/$branchname/my-footsteps'
    | '/org/$orgname/branch/$branchname/users-footsteps'
    | '/org/$orgname/branch/$branchname/my-timesheet'
    | '/org/$orgname/branch/$branchname/timesheets'
    | '/org/$orgname/branch/$branchname/accounting/accounts'
    | '/org/$orgname/branch/$branchname/accounting/computation-type'
    | '/org/$orgname/branch/$branchname/loan/$id'
    | '/org/$orgname/branch/$branchname/loan/loan-application'
    | '/org/$orgname/branch/$branchname/loan/loan-purpose'
    | '/org/$orgname/branch/$branchname/loan/loan-status'
    | '/org/$orgname/branch/$branchname/transaction/check-entry'
    | '/org/$orgname/branch/$branchname/transaction/fund-movement'
    | '/org/$orgname/branch/$branchname/transaction/online-entry'
    | '/org/$orgname/branch/$branchname/transaction/payment-entry'
    | '/org/$orgname/branch/$branchname/transaction/payment-type'
    | '/org/$orgname/branch/$branchname/transaction/transaction-batch'
    | '/org/$orgname/branch/$branchname/permission-management'
    | '/org/$orgname/branch/$branchname/permission-template'
    | '/org/$orgname/branch/$branchname/view-members'
    | '/org/$orgname/branch/$branchname/maintenance/banks'
    | '/org/$orgname/branch/$branchname/maintenance/bills-and-coins'
    | '/org/$orgname/branch/$branchname/maintenance/collateral'
    | '/org/$orgname/branch/$branchname/maintenance/holidays'
    | '/org/$orgname/branch/$branchname/maintenance/tag-template'
    | '/org/$orgname/branch/$branchname/approvals'
    | '/org/$orgname/branch/$branchname/loan'
    | '/org/$orgname/branch/$branchname/employees/permission-management'
    | '/org/$orgname/branch/$branchname/employees/roles-management'
    | '/org/$orgname/branch/$branchname/employees/view-employees'
    | '/org/$orgname/branch/$branchname/members/member-center'
    | '/org/$orgname/branch/$branchname/members/member-classification'
    | '/org/$orgname/branch/$branchname/members/member-gender'
    | '/org/$orgname/branch/$branchname/members/member-group'
    | '/org/$orgname/branch/$branchname/members/member-occupation'
    | '/org/$orgname/branch/$branchname/members/member-types'
    | '/org/$orgname/branch/$branchname/maintenance/fs-definition'
    | '/org/$orgname/branch/$branchname/maintenance/fs-definition-accounts-groupings'
    | '/org/$orgname/branch/$branchname/maintenance/invitation-code'
    | '/org/$orgname/branch/$branchname/maintenance/account-category'
    | '/org/$orgname/branch/$branchname/maintenance/account-classification'
    | '/org/$orgname/branch/$branchname/maintenance/gl-accounts-grouping'
    | '/org/$orgname/branch/$branchname/maintenance/gl-definition'
    | '/org/$orgname/branch/$branchname/maintenance/net-surplus-grouping-negative'
    | '/org/$orgname/branch/$branchname/maintenance/net-surplus-grouping-positive'
    | '/org/$orgname/branch/$branchname/maintenance/payment-type'
    | '/org/$orgname/branch/$branchname/timesheet/user/$id'
    | '/org/$orgname/branch/$branchname/member-profile/$memberId/$settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/about'
    | '/contact'
    | '/developers'
    | '/test'
    | '/account/profile'
    | '/account/qr'
    | '/account/security'
    | '/auth/forgot-password'
    | '/onboarding/setup-org'
    | '/org/$orgname'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/'
    | '/account'
    | '/onboarding'
    | '/account/verify/contact'
    | '/account/verify/email'
    | '/auth/password-reset/$resetId'
    | '/onboarding/create-branch/$organization_id'
    | '/onboarding/organization/$organization_id'
    | '/onboarding/organization'
    | '/org/$orgname/branch/$branchname'
    | '/org/$orgname/branch/$branchname/dashboard'
    | '/org/$orgname/branch/$branchname/my-footsteps'
    | '/org/$orgname/branch/$branchname/users-footsteps'
    | '/org/$orgname/branch/$branchname/my-timesheet'
    | '/org/$orgname/branch/$branchname/timesheets'
    | '/org/$orgname/branch/$branchname/accounting/accounts'
    | '/org/$orgname/branch/$branchname/accounting/computation-type'
    | '/org/$orgname/branch/$branchname/loan/$id'
    | '/org/$orgname/branch/$branchname/loan/loan-application'
    | '/org/$orgname/branch/$branchname/loan/loan-purpose'
    | '/org/$orgname/branch/$branchname/loan/loan-status'
    | '/org/$orgname/branch/$branchname/transaction/check-entry'
    | '/org/$orgname/branch/$branchname/transaction/fund-movement'
    | '/org/$orgname/branch/$branchname/transaction/online-entry'
    | '/org/$orgname/branch/$branchname/transaction/payment-entry'
    | '/org/$orgname/branch/$branchname/transaction/payment-type'
    | '/org/$orgname/branch/$branchname/transaction/transaction-batch'
    | '/org/$orgname/branch/$branchname/permission-management'
    | '/org/$orgname/branch/$branchname/permission-template'
    | '/org/$orgname/branch/$branchname/view-members'
    | '/org/$orgname/branch/$branchname/maintenance/banks'
    | '/org/$orgname/branch/$branchname/maintenance/bills-and-coins'
    | '/org/$orgname/branch/$branchname/maintenance/collateral'
    | '/org/$orgname/branch/$branchname/maintenance/holidays'
    | '/org/$orgname/branch/$branchname/maintenance/tag-template'
    | '/org/$orgname/branch/$branchname/approvals'
    | '/org/$orgname/branch/$branchname/loan'
    | '/org/$orgname/branch/$branchname/employees/permission-management'
    | '/org/$orgname/branch/$branchname/employees/roles-management'
    | '/org/$orgname/branch/$branchname/employees/view-employees'
    | '/org/$orgname/branch/$branchname/members/member-center'
    | '/org/$orgname/branch/$branchname/members/member-classification'
    | '/org/$orgname/branch/$branchname/members/member-gender'
    | '/org/$orgname/branch/$branchname/members/member-group'
    | '/org/$orgname/branch/$branchname/members/member-occupation'
    | '/org/$orgname/branch/$branchname/members/member-types'
    | '/org/$orgname/branch/$branchname/maintenance/fs-definition'
    | '/org/$orgname/branch/$branchname/maintenance/fs-definition-accounts-groupings'
    | '/org/$orgname/branch/$branchname/maintenance/invitation-code'
    | '/org/$orgname/branch/$branchname/maintenance/account-category'
    | '/org/$orgname/branch/$branchname/maintenance/account-classification'
    | '/org/$orgname/branch/$branchname/maintenance/gl-accounts-grouping'
    | '/org/$orgname/branch/$branchname/maintenance/gl-definition'
    | '/org/$orgname/branch/$branchname/maintenance/net-surplus-grouping-negative'
    | '/org/$orgname/branch/$branchname/maintenance/net-surplus-grouping-positive'
    | '/org/$orgname/branch/$branchname/maintenance/payment-type'
    | '/org/$orgname/branch/$branchname/timesheet/user/$id'
    | '/org/$orgname/branch/$branchname/member-profile/$memberId/$settings'
  id:
    | '__root__'
    | '/(landing)'
    | '/account'
    | '/auth'
    | '/onboarding'
    | '/onboarding/organization'
    | '/(landing)/about'
    | '/(landing)/contact'
    | '/(landing)/developers'
    | '/(landing)/test'
    | '/account/profile'
    | '/account/qr'
    | '/account/security'
    | '/auth/forgot-password'
    | '/onboarding/setup-org'
    | '/org/$orgname'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/(landing)/'
    | '/account/'
    | '/onboarding/'
    | '/account/verify/contact'
    | '/account/verify/email'
    | '/auth/password-reset/$resetId'
    | '/onboarding/create-branch/$organization_id'
    | '/onboarding/organization/$organization_id'
    | '/onboarding/organization/'
    | '/org/$orgname/branch/$branchname'
    | '/org/$orgname/branch/$branchname/'
    | '/org/$orgname/branch/$branchname/(common)/dashboard'
    | '/org/$orgname/branch/$branchname/(common)/my-footsteps'
    | '/org/$orgname/branch/$branchname/(common)/users-footsteps'
    | '/org/$orgname/branch/$branchname/(common)/(timesheets)/my-timesheet'
    | '/org/$orgname/branch/$branchname/(common)/(timesheets)/timesheets'
    | '/org/$orgname/branch/$branchname/(employee)/accounting/accounts'
    | '/org/$orgname/branch/$branchname/(employee)/accounting/computation-type'
    | '/org/$orgname/branch/$branchname/(employee)/loan/$id'
    | '/org/$orgname/branch/$branchname/(employee)/loan/loan-application'
    | '/org/$orgname/branch/$branchname/(employee)/loan/loan-purpose'
    | '/org/$orgname/branch/$branchname/(employee)/loan/loan-status'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/check-entry'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/fund-movement'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/online-entry'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/payment-entry'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/payment-type'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/transaction-batch'
    | '/org/$orgname/branch/$branchname/(maintenance)/(employees)/permission-management'
    | '/org/$orgname/branch/$branchname/(maintenance)/(employees)/permission-template'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/view-members'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/banks'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/bills-and-coins'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/collateral'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/holidays'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/tag-template'
    | '/org/$orgname/branch/$branchname/(employee)/approvals/'
    | '/org/$orgname/branch/$branchname/(employee)/loan/'
    | '/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/permission-management'
    | '/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/roles-management'
    | '/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/view-employees'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-center'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-classification'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-gender'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-group'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-occupation'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-types'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition-accounts-groupings'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(access-and-onboarding)/invitation-code'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-category'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-classification'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-accounts-grouping'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-definition'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-negative'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-positive'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(payment-configuration)/payment-type'
    | '/org/$orgname/branch/$branchname/(common)/(timesheets)/timesheet/user/$id'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/member-profile/$memberId/$settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  landingRouteRoute: typeof landingRouteRouteWithChildren
  AccountRouteRoute: typeof AccountRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  OnboardingRouteRoute: typeof OnboardingRouteRouteWithChildren
  OrgOrgnameRoute: typeof OrgOrgnameRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  landingRouteRoute: landingRouteRouteWithChildren,
  AccountRouteRoute: AccountRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  OnboardingRouteRoute: OnboardingRouteRouteWithChildren,
  OrgOrgnameRoute: OrgOrgnameRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(landing)",
        "/account",
        "/auth",
        "/onboarding",
        "/org/$orgname"
      ]
    },
    "/(landing)": {
      "filePath": "(landing)/route.tsx",
      "children": [
        "/(landing)/about",
        "/(landing)/contact",
        "/(landing)/developers",
        "/(landing)/test",
        "/(landing)/"
      ]
    },
    "/account": {
      "filePath": "account/route.tsx",
      "children": [
        "/account/profile",
        "/account/qr",
        "/account/security",
        "/account/",
        "/account/verify/contact",
        "/account/verify/email"
      ]
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/forgot-password",
        "/auth/sign-in",
        "/auth/sign-up",
        "/auth/password-reset/$resetId"
      ]
    },
    "/onboarding": {
      "filePath": "onboarding/route.tsx",
      "children": [
        "/onboarding/organization",
        "/onboarding/setup-org",
        "/onboarding/",
        "/onboarding/create-branch/$organization_id"
      ]
    },
    "/onboarding/organization": {
      "filePath": "onboarding/organization/route.tsx",
      "parent": "/onboarding",
      "children": [
        "/onboarding/organization/$organization_id",
        "/onboarding/organization/"
      ]
    },
    "/(landing)/about": {
      "filePath": "(landing)/about.tsx",
      "parent": "/(landing)"
    },
    "/(landing)/contact": {
      "filePath": "(landing)/contact.tsx",
      "parent": "/(landing)"
    },
    "/(landing)/developers": {
      "filePath": "(landing)/developers.tsx",
      "parent": "/(landing)"
    },
    "/(landing)/test": {
      "filePath": "(landing)/test.tsx",
      "parent": "/(landing)"
    },
    "/account/profile": {
      "filePath": "account/profile.tsx",
      "parent": "/account"
    },
    "/account/qr": {
      "filePath": "account/qr.tsx",
      "parent": "/account"
    },
    "/account/security": {
      "filePath": "account/security.tsx",
      "parent": "/account"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.tsx",
      "parent": "/auth"
    },
    "/onboarding/setup-org": {
      "filePath": "onboarding/setup-org.tsx",
      "parent": "/onboarding"
    },
    "/org/$orgname": {
      "filePath": "org/$orgname.tsx",
      "children": [
        "/org/$orgname/branch/$branchname"
      ]
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.lazy.tsx",
      "parent": "/auth"
    },
    "/auth/sign-up": {
      "filePath": "auth/sign-up.lazy.tsx",
      "parent": "/auth"
    },
    "/(landing)/": {
      "filePath": "(landing)/index.tsx",
      "parent": "/(landing)"
    },
    "/account/": {
      "filePath": "account/index.tsx",
      "parent": "/account"
    },
    "/onboarding/": {
      "filePath": "onboarding/index.tsx",
      "parent": "/onboarding"
    },
    "/account/verify/contact": {
      "filePath": "account/verify/contact.tsx",
      "parent": "/account"
    },
    "/account/verify/email": {
      "filePath": "account/verify/email.tsx",
      "parent": "/account"
    },
    "/auth/password-reset/$resetId": {
      "filePath": "auth/password-reset.$resetId.tsx",
      "parent": "/auth"
    },
    "/onboarding/create-branch/$organization_id": {
      "filePath": "onboarding/create-branch.$organization_id.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/organization/$organization_id": {
      "filePath": "onboarding/organization/$organization_id.tsx",
      "parent": "/onboarding/organization"
    },
    "/onboarding/organization/": {
      "filePath": "onboarding/organization/index.tsx",
      "parent": "/onboarding/organization"
    },
    "/org/$orgname/branch/$branchname": {
      "filePath": "org/$orgname/branch.$branchname/route.tsx",
      "parent": "/org/$orgname",
      "children": [
        "/org/$orgname/branch/$branchname/",
        "/org/$orgname/branch/$branchname/(common)/dashboard",
        "/org/$orgname/branch/$branchname/(common)/my-footsteps",
        "/org/$orgname/branch/$branchname/(common)/users-footsteps",
        "/org/$orgname/branch/$branchname/(common)/(timesheets)/my-timesheet",
        "/org/$orgname/branch/$branchname/(common)/(timesheets)/timesheets",
        "/org/$orgname/branch/$branchname/(employee)/accounting/accounts",
        "/org/$orgname/branch/$branchname/(employee)/accounting/computation-type",
        "/org/$orgname/branch/$branchname/(employee)/loan/$id",
        "/org/$orgname/branch/$branchname/(employee)/loan/loan-application",
        "/org/$orgname/branch/$branchname/(employee)/loan/loan-purpose",
        "/org/$orgname/branch/$branchname/(employee)/loan/loan-status",
        "/org/$orgname/branch/$branchname/(employee)/transaction/check-entry",
        "/org/$orgname/branch/$branchname/(employee)/transaction/fund-movement",
        "/org/$orgname/branch/$branchname/(employee)/transaction/online-entry",
        "/org/$orgname/branch/$branchname/(employee)/transaction/payment-entry",
        "/org/$orgname/branch/$branchname/(employee)/transaction/payment-type",
        "/org/$orgname/branch/$branchname/(employee)/transaction/transaction-batch",
        "/org/$orgname/branch/$branchname/(maintenance)/(employees)/permission-management",
        "/org/$orgname/branch/$branchname/(maintenance)/(employees)/permission-template",
        "/org/$orgname/branch/$branchname/(maintenance)/(members)/view-members",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/banks",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/bills-and-coins",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/collateral",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/holidays",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/tag-template",
        "/org/$orgname/branch/$branchname/(employee)/approvals/",
        "/org/$orgname/branch/$branchname/(employee)/loan/",
        "/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/permission-management",
        "/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/roles-management",
        "/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/view-employees",
        "/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-center",
        "/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-classification",
        "/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-gender",
        "/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-group",
        "/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-occupation",
        "/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-types",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition-accounts-groupings",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(access-and-onboarding)/invitation-code",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-category",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-classification",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-accounts-grouping",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-definition",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-negative",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-positive",
        "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(payment-configuration)/payment-type",
        "/org/$orgname/branch/$branchname/(common)/(timesheets)/timesheet/user/$id",
        "/org/$orgname/branch/$branchname/(maintenance)/(members)/member-profile/$memberId/$settings/"
      ]
    },
    "/org/$orgname/branch/$branchname/": {
      "filePath": "org/$orgname/branch.$branchname/index.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(common)/dashboard": {
      "filePath": "org/$orgname/branch.$branchname/(common)/dashboard.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(common)/my-footsteps": {
      "filePath": "org/$orgname/branch.$branchname/(common)/my-footsteps.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(common)/users-footsteps": {
      "filePath": "org/$orgname/branch.$branchname/(common)/users-footsteps.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(common)/(timesheets)/my-timesheet": {
      "filePath": "org/$orgname/branch.$branchname/(common)/(timesheets)/my-timesheet.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(common)/(timesheets)/timesheets": {
      "filePath": "org/$orgname/branch.$branchname/(common)/(timesheets)/timesheets.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/accounting/accounts": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/accounting/accounts.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/accounting/computation-type": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/accounting/computation-type.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/loan/$id": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/loan/$id.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/loan/loan-application": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/loan/loan-application.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/loan/loan-purpose": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/loan/loan-purpose.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/loan/loan-status": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/loan/loan-status.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/transaction/check-entry": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/transaction/check-entry.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/transaction/fund-movement": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/transaction/fund-movement.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/transaction/online-entry": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/transaction/online-entry.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/transaction/payment-entry": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/transaction/payment-entry.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/transaction/payment-type": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/transaction/payment-type.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/transaction/transaction-batch": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/transaction/transaction-batch.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/(employees)/permission-management": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/(employees)/permission-management.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/(employees)/permission-template": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/(employees)/permission-template.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/(members)/view-members": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/(members)/view-members.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/banks": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/banks.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/bills-and-coins": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/bills-and-coins.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/collateral": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/collateral.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/holidays": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/holidays.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/tag-template": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/tag-template.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/approvals/": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/approvals/index.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(employee)/loan/": {
      "filePath": "org/$orgname/branch.$branchname/(employee)/loan/index.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/permission-management": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/(employees)/employees/permission-management.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/roles-management": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/(employees)/employees/roles-management.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/(employees)/employees/view-employees": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/(employees)/employees/view-employees.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-center": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-center.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-classification": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-classification.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-gender": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-gender.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-group": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-group.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-occupation": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-occupation.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-types": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-types.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition-accounts-groupings": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/(Financial-statement-configuration)/fs-definition-accounts-groupings.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(access-and-onboarding)/invitation-code": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/(access-and-onboarding)/invitation-code.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-category": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/(account-setup)/account-category.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-classification": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/(account-setup)/account-classification.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-accounts-grouping": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-accounts-grouping.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-definition": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/(general-ledger-management)/gl-definition.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-negative": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-negative.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-positive": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/(net-surplus-handling)/net-surplus-grouping-positive.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/maintenance/(payment-configuration)/payment-type": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/maintenance/(payment-configuration)/payment-type.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(common)/(timesheets)/timesheet/user/$id": {
      "filePath": "org/$orgname/branch.$branchname/(common)/(timesheets)/timesheet.user.$id/route.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    },
    "/org/$orgname/branch/$branchname/(maintenance)/(members)/member-profile/$memberId/$settings/": {
      "filePath": "org/$orgname/branch.$branchname/(maintenance)/(members)/member-profile.$memberId.$settings/index.tsx",
      "parent": "/org/$orgname/branch/$branchname"
    }
  }
}
ROUTE_MANIFEST_END */
