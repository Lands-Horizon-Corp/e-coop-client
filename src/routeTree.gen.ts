/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as OnboardingRouteRouteImport } from './routes/onboarding/route'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as AccountProfileRouteRouteImport } from './routes/account-profile/route'
import { Route as landingRouteRouteImport } from './routes/(landing)/route'
import { Route as OnboardingIndexRouteImport } from './routes/onboarding/index'
import { Route as AccountProfileIndexRouteImport } from './routes/account-profile/index'
import { Route as landingIndexRouteImport } from './routes/(landing)/index'
import { Route as OrgOrgnameRouteImport } from './routes/org/$orgname'
import { Route as OnboardingSetupOrgRouteImport } from './routes/onboarding/setup-org'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as AccountProfileSecurityRouteImport } from './routes/account-profile/security'
import { Route as AccountProfileQrRouteImport } from './routes/account-profile/qr'
import { Route as AccountProfileProfileRouteImport } from './routes/account-profile/profile'
import { Route as AccountProfileActivityLogsRouteImport } from './routes/account-profile/activity-logs'
import { Route as landingTestRouteImport } from './routes/(landing)/test'
import { Route as landingFrequentlyAskedQuestionsRouteImport } from './routes/(landing)/frequently-asked-questions'
import { Route as landingDevelopersRouteImport } from './routes/(landing)/developers'
import { Route as landingContactRouteImport } from './routes/(landing)/contact'
import { Route as landingAboutRouteImport } from './routes/(landing)/about'
import { Route as OnboardingOrganizationRouteRouteImport } from './routes/onboarding/organization/route'
import { Route as landingPolicyRouteRouteImport } from './routes/(landing)/policy/route'
import { Route as OnboardingOrganizationIndexRouteImport } from './routes/onboarding/organization/index'
import { Route as landingSubscriptionIndexRouteImport } from './routes/(landing)/subscription/index'
import { Route as OnboardingOrganizationOrganization_idRouteImport } from './routes/onboarding/organization/$organization_id'
import { Route as OnboardingCreateBranchOrganization_idRouteImport } from './routes/onboarding/create-branch.$organization_id'
import { Route as AuthPasswordResetResetIdRouteImport } from './routes/auth/password-reset.$resetId'
import { Route as AccountProfileVerifyEmailRouteImport } from './routes/account-profile/verify/email'
import { Route as AccountProfileVerifyContactRouteImport } from './routes/account-profile/verify/contact'
import { Route as landingPolicyTermsOfUseRouteImport } from './routes/(landing)/policy/terms-of-use'
import { Route as landingPolicyTermsAndConditionRouteImport } from './routes/(landing)/policy/terms-and-condition'
import { Route as landingPolicySecurityPolicyRouteImport } from './routes/(landing)/policy/security-policy'
import { Route as landingPolicyRiskManagementPolicyRouteImport } from './routes/(landing)/policy/risk-management-policy'
import { Route as landingPolicyPrivacyPolicyRouteImport } from './routes/(landing)/policy/privacy-policy'
import { Route as landingPolicyKycPolicyRouteImport } from './routes/(landing)/policy/kyc-policy'
import { Route as landingPolicyFeeAndChargesPolicyRouteImport } from './routes/(landing)/policy/fee-and-charges-policy'
import { Route as landingPolicyDeveloperPolicyRouteImport } from './routes/(landing)/policy/developer-policy'
import { Route as landingPolicyDataProtectionPolicyRouteImport } from './routes/(landing)/policy/data-protection-policy'
import { Route as landingPolicyCookiePolicyRouteImport } from './routes/(landing)/policy/cookie-policy'
import { Route as landingPolicyComplaintHandlingAndDisputePolicyRouteImport } from './routes/(landing)/policy/complaint-handling-and-dispute-policy'
import { Route as landingPolicyCodeOfConductEthicsPolicyRouteImport } from './routes/(landing)/policy/code-of-conduct-ethics-policy'
import { Route as landingPolicyAmlCtfPolicyRouteImport } from './routes/(landing)/policy/aml-ctf-policy'
import { Route as OrgOrgnameBranchBranchnameRouteRouteImport } from './routes/org/$orgname/branch.$branchname/route'
import { Route as OrgOrgnameBranchBranchnameIndexRouteImport } from './routes/org/$orgname/branch.$branchname/index'
import { Route as OrgOrgnameBranchBranchnameDevDocumentationRouteImport } from './routes/org/$orgname/branch.$branchname/dev/documentation'
import { Route as OrgOrgnameBranchBranchnameAccountingAccountsRouteImport } from './routes/org/$orgname/branch.$branchname/accounting/accounts'
import { Route as OrgOrgnameBranchBranchnamecommonDashboardRouteImport } from './routes/org/$orgname/branch.$branchname/(common)/dashboard'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionIndexRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/index'
import { Route as OrgOrgnameBranchBranchnameemployeeApprovalsIndexRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/approvals/index'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/bills-and-coins'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/banks'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/view-members'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMemberAccountingLedgerRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/member-accounting-ledger'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionTransactionsRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/transactions'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/transaction-batch'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionTestRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/test'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/payment-type'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionDisbursementTransactionRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/disbursement-transaction'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionDisbursementRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/disbursement'
import { Route as OrgOrgnameBranchBranchnameemployeeGeneralLedgerWithdrawEntryRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/general-ledger/withdraw-entry'
import { Route as OrgOrgnameBranchBranchnameemployeeGeneralLedgerPaymentEntryRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/general-ledger/payment-entry'
import { Route as OrgOrgnameBranchBranchnameemployeeGeneralLedgerOnlineEntryRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/general-ledger/online-entry'
import { Route as OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalVoucherRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/general-ledger/journal-voucher'
import { Route as OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalEntryRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/general-ledger/journal-entry'
import { Route as OrgOrgnameBranchBranchnameemployeeGeneralLedgerGeneralLedgerRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/general-ledger/general-ledger'
import { Route as OrgOrgnameBranchBranchnameemployeeGeneralLedgerDepositEntryRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/general-ledger/deposit-entry'
import { Route as OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckVoucherRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/general-ledger/check-voucher'
import { Route as OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckEntryRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/general-ledger/check-entry'
import { Route as OrgOrgnameBranchBranchnameemployeeGeneralLedgerCashEntryRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/general-ledger/cash-entry'
import { Route as OrgOrgnameBranchBranchnameemployeeGeneralLedgerAdjustmentEntryRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/general-ledger/adjustment-entry'
import { Route as OrgOrgnameBranchBranchnamecommonsettingsSettingsRouteImport } from './routes/org/$orgname/branch.$branchname/(common)/(settings)/settings'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/(account-setup)/account-classification'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/(account-setup)/account-category'
import { Route as OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/maintenance/(access-and-onboarding)/invitation-code'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-types'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-occupation'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-group'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-gender'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberDepartmentRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-department'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-classification'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/members/member-center'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferWithdrawRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/quick-transfer/withdraw'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferDepositRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/quick-transfer/deposit'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceGeneralLedgerDefinitionRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/maintenance/general-ledger-definition'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceFinancialStatementDefinitionRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/maintenance/financial-statement-definition'
import { Route as OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceCashCountRouteImport } from './routes/org/$orgname/branch.$branchname/(employee)/transaction/maintenance/cash-count'
import { Route as OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRouteImport } from './routes/org/$orgname/branch.$branchname/(maintenance)/(members)/member-profile.$memberId.$settings/index'

const AuthSignUpLazyRouteImport = createFileRoute('/auth/sign-up')()

const OnboardingRouteRoute = OnboardingRouteRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountProfileRouteRoute = AccountProfileRouteRouteImport.update({
  id: '/account-profile',
  path: '/account-profile',
  getParentRoute: () => rootRouteImport,
} as any)
const landingRouteRoute = landingRouteRouteImport.update({
  id: '/(landing)',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingIndexRoute = OnboardingIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => OnboardingRouteRoute,
} as any)
const AccountProfileIndexRoute = AccountProfileIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AccountProfileRouteRoute,
} as any)
const landingIndexRoute = landingIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => landingRouteRoute,
} as any)
const AuthSignUpLazyRoute = AuthSignUpLazyRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() => import('./routes/auth/sign-up.lazy').then((d) => d.Route))
const OrgOrgnameRoute = OrgOrgnameRouteImport.update({
  id: '/org/$orgname',
  path: '/org/$orgname',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingSetupOrgRoute = OnboardingSetupOrgRouteImport.update({
  id: '/setup-org',
  path: '/setup-org',
  getParentRoute: () => OnboardingRouteRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AccountProfileSecurityRoute = AccountProfileSecurityRouteImport.update({
  id: '/security',
  path: '/security',
  getParentRoute: () => AccountProfileRouteRoute,
} as any)
const AccountProfileQrRoute = AccountProfileQrRouteImport.update({
  id: '/qr',
  path: '/qr',
  getParentRoute: () => AccountProfileRouteRoute,
} as any)
const AccountProfileProfileRoute = AccountProfileProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AccountProfileRouteRoute,
} as any)
const AccountProfileActivityLogsRoute =
  AccountProfileActivityLogsRouteImport.update({
    id: '/activity-logs',
    path: '/activity-logs',
    getParentRoute: () => AccountProfileRouteRoute,
  } as any)
const landingTestRoute = landingTestRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => landingRouteRoute,
} as any)
const landingFrequentlyAskedQuestionsRoute =
  landingFrequentlyAskedQuestionsRouteImport.update({
    id: '/frequently-asked-questions',
    path: '/frequently-asked-questions',
    getParentRoute: () => landingRouteRoute,
  } as any)
const landingDevelopersRoute = landingDevelopersRouteImport.update({
  id: '/developers',
  path: '/developers',
  getParentRoute: () => landingRouteRoute,
} as any)
const landingContactRoute = landingContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => landingRouteRoute,
} as any)
const landingAboutRoute = landingAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => landingRouteRoute,
} as any)
const OnboardingOrganizationRouteRoute =
  OnboardingOrganizationRouteRouteImport.update({
    id: '/organization',
    path: '/organization',
    getParentRoute: () => OnboardingRouteRoute,
  } as any)
const landingPolicyRouteRoute = landingPolicyRouteRouteImport.update({
  id: '/policy',
  path: '/policy',
  getParentRoute: () => landingRouteRoute,
} as any)
const OnboardingOrganizationIndexRoute =
  OnboardingOrganizationIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => OnboardingOrganizationRouteRoute,
  } as any)
const landingSubscriptionIndexRoute =
  landingSubscriptionIndexRouteImport.update({
    id: '/subscription/',
    path: '/subscription/',
    getParentRoute: () => landingRouteRoute,
  } as any)
const OnboardingOrganizationOrganization_idRoute =
  OnboardingOrganizationOrganization_idRouteImport.update({
    id: '/$organization_id',
    path: '/$organization_id',
    getParentRoute: () => OnboardingOrganizationRouteRoute,
  } as any)
const OnboardingCreateBranchOrganization_idRoute =
  OnboardingCreateBranchOrganization_idRouteImport.update({
    id: '/create-branch/$organization_id',
    path: '/create-branch/$organization_id',
    getParentRoute: () => OnboardingRouteRoute,
  } as any)
const AuthPasswordResetResetIdRoute =
  AuthPasswordResetResetIdRouteImport.update({
    id: '/password-reset/$resetId',
    path: '/password-reset/$resetId',
    getParentRoute: () => AuthRouteRoute,
  } as any)
const AccountProfileVerifyEmailRoute =
  AccountProfileVerifyEmailRouteImport.update({
    id: '/verify/email',
    path: '/verify/email',
    getParentRoute: () => AccountProfileRouteRoute,
  } as any)
const AccountProfileVerifyContactRoute =
  AccountProfileVerifyContactRouteImport.update({
    id: '/verify/contact',
    path: '/verify/contact',
    getParentRoute: () => AccountProfileRouteRoute,
  } as any)
const landingPolicyTermsOfUseRoute = landingPolicyTermsOfUseRouteImport.update({
  id: '/terms-of-use',
  path: '/terms-of-use',
  getParentRoute: () => landingPolicyRouteRoute,
} as any)
const landingPolicyTermsAndConditionRoute =
  landingPolicyTermsAndConditionRouteImport.update({
    id: '/terms-and-condition',
    path: '/terms-and-condition',
    getParentRoute: () => landingPolicyRouteRoute,
  } as any)
const landingPolicySecurityPolicyRoute =
  landingPolicySecurityPolicyRouteImport.update({
    id: '/security-policy',
    path: '/security-policy',
    getParentRoute: () => landingPolicyRouteRoute,
  } as any)
const landingPolicyRiskManagementPolicyRoute =
  landingPolicyRiskManagementPolicyRouteImport.update({
    id: '/risk-management-policy',
    path: '/risk-management-policy',
    getParentRoute: () => landingPolicyRouteRoute,
  } as any)
const landingPolicyPrivacyPolicyRoute =
  landingPolicyPrivacyPolicyRouteImport.update({
    id: '/privacy-policy',
    path: '/privacy-policy',
    getParentRoute: () => landingPolicyRouteRoute,
  } as any)
const landingPolicyKycPolicyRoute = landingPolicyKycPolicyRouteImport.update({
  id: '/kyc-policy',
  path: '/kyc-policy',
  getParentRoute: () => landingPolicyRouteRoute,
} as any)
const landingPolicyFeeAndChargesPolicyRoute =
  landingPolicyFeeAndChargesPolicyRouteImport.update({
    id: '/fee-and-charges-policy',
    path: '/fee-and-charges-policy',
    getParentRoute: () => landingPolicyRouteRoute,
  } as any)
const landingPolicyDeveloperPolicyRoute =
  landingPolicyDeveloperPolicyRouteImport.update({
    id: '/developer-policy',
    path: '/developer-policy',
    getParentRoute: () => landingPolicyRouteRoute,
  } as any)
const landingPolicyDataProtectionPolicyRoute =
  landingPolicyDataProtectionPolicyRouteImport.update({
    id: '/data-protection-policy',
    path: '/data-protection-policy',
    getParentRoute: () => landingPolicyRouteRoute,
  } as any)
const landingPolicyCookiePolicyRoute =
  landingPolicyCookiePolicyRouteImport.update({
    id: '/cookie-policy',
    path: '/cookie-policy',
    getParentRoute: () => landingPolicyRouteRoute,
  } as any)
const landingPolicyComplaintHandlingAndDisputePolicyRoute =
  landingPolicyComplaintHandlingAndDisputePolicyRouteImport.update({
    id: '/complaint-handling-and-dispute-policy',
    path: '/complaint-handling-and-dispute-policy',
    getParentRoute: () => landingPolicyRouteRoute,
  } as any)
const landingPolicyCodeOfConductEthicsPolicyRoute =
  landingPolicyCodeOfConductEthicsPolicyRouteImport.update({
    id: '/code-of-conduct-ethics-policy',
    path: '/code-of-conduct-ethics-policy',
    getParentRoute: () => landingPolicyRouteRoute,
  } as any)
const landingPolicyAmlCtfPolicyRoute =
  landingPolicyAmlCtfPolicyRouteImport.update({
    id: '/aml-ctf-policy',
    path: '/aml-ctf-policy',
    getParentRoute: () => landingPolicyRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnameRouteRoute =
  OrgOrgnameBranchBranchnameRouteRouteImport.update({
    id: '/branch/$branchname',
    path: '/branch/$branchname',
    getParentRoute: () => OrgOrgnameRoute,
  } as any)
const OrgOrgnameBranchBranchnameIndexRoute =
  OrgOrgnameBranchBranchnameIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnameDevDocumentationRoute =
  OrgOrgnameBranchBranchnameDevDocumentationRouteImport.update({
    id: '/dev/documentation',
    path: '/dev/documentation',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnameAccountingAccountsRoute =
  OrgOrgnameBranchBranchnameAccountingAccountsRouteImport.update({
    id: '/accounting/accounts',
    path: '/accounting/accounts',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnamecommonDashboardRoute =
  OrgOrgnameBranchBranchnamecommonDashboardRouteImport.update({
    id: '/(common)/dashboard',
    path: '/dashboard',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnameemployeeTransactionIndexRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionIndexRouteImport.update({
    id: '/(employee)/transaction/',
    path: '/transaction/',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute =
  OrgOrgnameBranchBranchnameemployeeApprovalsIndexRouteImport.update({
    id: '/(employee)/approvals/',
    path: '/approvals/',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRouteImport.update(
    {
      id: '/(maintenance)/maintenance/bills-and-coins',
      path: '/maintenance/bills-and-coins',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRouteImport.update({
    id: '/(maintenance)/maintenance/banks',
    path: '/maintenance/banks',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRouteImport.update({
    id: '/(maintenance)/(members)/view-members',
    path: '/view-members',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnamemaintenancemembersMemberAccountingLedgerRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMemberAccountingLedgerRouteImport.update(
    {
      id: '/(maintenance)/(members)/member-accounting-ledger',
      path: '/member-accounting-ledger',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeTransactionTransactionsRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionTransactionsRouteImport.update({
    id: '/(employee)/transaction/transactions',
    path: '/transaction/transactions',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRouteImport.update(
    {
      id: '/(employee)/transaction/transaction-batch',
      path: '/transaction/transaction-batch',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeTransactionTestRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionTestRouteImport.update({
    id: '/(employee)/transaction/test',
    path: '/transaction/test',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRouteImport.update({
    id: '/(employee)/transaction/payment-type',
    path: '/transaction/payment-type',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnameemployeeTransactionDisbursementTransactionRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionDisbursementTransactionRouteImport.update(
    {
      id: '/(employee)/transaction/disbursement-transaction',
      path: '/transaction/disbursement-transaction',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeTransactionDisbursementRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionDisbursementRouteImport.update({
    id: '/(employee)/transaction/disbursement',
    path: '/transaction/disbursement',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnameemployeeGeneralLedgerWithdrawEntryRoute =
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerWithdrawEntryRouteImport.update(
    {
      id: '/(employee)/general-ledger/withdraw-entry',
      path: '/general-ledger/withdraw-entry',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeGeneralLedgerPaymentEntryRoute =
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerPaymentEntryRouteImport.update(
    {
      id: '/(employee)/general-ledger/payment-entry',
      path: '/general-ledger/payment-entry',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeGeneralLedgerOnlineEntryRoute =
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerOnlineEntryRouteImport.update({
    id: '/(employee)/general-ledger/online-entry',
    path: '/general-ledger/online-entry',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalVoucherRoute =
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalVoucherRouteImport.update(
    {
      id: '/(employee)/general-ledger/journal-voucher',
      path: '/general-ledger/journal-voucher',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalEntryRoute =
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalEntryRouteImport.update(
    {
      id: '/(employee)/general-ledger/journal-entry',
      path: '/general-ledger/journal-entry',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeGeneralLedgerGeneralLedgerRoute =
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerGeneralLedgerRouteImport.update(
    {
      id: '/(employee)/general-ledger/general-ledger',
      path: '/general-ledger/general-ledger',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeGeneralLedgerDepositEntryRoute =
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerDepositEntryRouteImport.update(
    {
      id: '/(employee)/general-ledger/deposit-entry',
      path: '/general-ledger/deposit-entry',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckVoucherRoute =
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckVoucherRouteImport.update(
    {
      id: '/(employee)/general-ledger/check-voucher',
      path: '/general-ledger/check-voucher',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckEntryRoute =
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckEntryRouteImport.update({
    id: '/(employee)/general-ledger/check-entry',
    path: '/general-ledger/check-entry',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnameemployeeGeneralLedgerCashEntryRoute =
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerCashEntryRouteImport.update({
    id: '/(employee)/general-ledger/cash-entry',
    path: '/general-ledger/cash-entry',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnameemployeeGeneralLedgerAdjustmentEntryRoute =
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerAdjustmentEntryRouteImport.update(
    {
      id: '/(employee)/general-ledger/adjustment-entry',
      path: '/general-ledger/adjustment-entry',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnamecommonsettingsSettingsRoute =
  OrgOrgnameBranchBranchnamecommonsettingsSettingsRouteImport.update({
    id: '/(common)/(settings)/settings',
    path: '/settings',
    getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
  } as any)
const OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRouteImport.update(
    {
      id: '/(maintenance)/maintenance/(account-setup)/account-classification',
      path: '/maintenance/account-classification',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRouteImport.update(
    {
      id: '/(maintenance)/maintenance/(account-setup)/account-category',
      path: '/maintenance/account-category',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute =
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRouteImport.update(
    {
      id: '/(maintenance)/maintenance/(access-and-onboarding)/invitation-code',
      path: '/maintenance/invitation-code',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRouteImport.update(
    {
      id: '/(maintenance)/(members)/members/member-types',
      path: '/members/member-types',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRouteImport.update(
    {
      id: '/(maintenance)/(members)/members/member-occupation',
      path: '/members/member-occupation',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRouteImport.update(
    {
      id: '/(maintenance)/(members)/members/member-group',
      path: '/members/member-group',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRouteImport.update(
    {
      id: '/(maintenance)/(members)/members/member-gender',
      path: '/members/member-gender',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberDepartmentRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberDepartmentRouteImport.update(
    {
      id: '/(maintenance)/(members)/members/member-department',
      path: '/members/member-department',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRouteImport.update(
    {
      id: '/(maintenance)/(members)/members/member-classification',
      path: '/members/member-classification',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRouteImport.update(
    {
      id: '/(maintenance)/(members)/members/member-center',
      path: '/members/member-center',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferWithdrawRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferWithdrawRouteImport.update(
    {
      id: '/(employee)/transaction/quick-transfer/withdraw',
      path: '/transaction/quick-transfer/withdraw',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferDepositRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferDepositRouteImport.update(
    {
      id: '/(employee)/transaction/quick-transfer/deposit',
      path: '/transaction/quick-transfer/deposit',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceGeneralLedgerDefinitionRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceGeneralLedgerDefinitionRouteImport.update(
    {
      id: '/(employee)/transaction/maintenance/general-ledger-definition',
      path: '/transaction/maintenance/general-ledger-definition',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceFinancialStatementDefinitionRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceFinancialStatementDefinitionRouteImport.update(
    {
      id: '/(employee)/transaction/maintenance/financial-statement-definition',
      path: '/transaction/maintenance/financial-statement-definition',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceCashCountRoute =
  OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceCashCountRouteImport.update(
    {
      id: '/(employee)/transaction/maintenance/cash-count',
      path: '/transaction/maintenance/cash-count',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )
const OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute =
  OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRouteImport.update(
    {
      id: '/(maintenance)/(members)/member-profile/$memberId/$settings/',
      path: '/member-profile/$memberId/$settings/',
      getParentRoute: () => OrgOrgnameBranchBranchnameRouteRoute,
    } as any,
  )

export interface FileRoutesByFullPath {
  '/': typeof landingIndexRoute
  '/account-profile': typeof AccountProfileRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/policy': typeof landingPolicyRouteRouteWithChildren
  '/onboarding/organization': typeof OnboardingOrganizationRouteRouteWithChildren
  '/about': typeof landingAboutRoute
  '/contact': typeof landingContactRoute
  '/developers': typeof landingDevelopersRoute
  '/frequently-asked-questions': typeof landingFrequentlyAskedQuestionsRoute
  '/test': typeof landingTestRoute
  '/account-profile/activity-logs': typeof AccountProfileActivityLogsRoute
  '/account-profile/profile': typeof AccountProfileProfileRoute
  '/account-profile/qr': typeof AccountProfileQrRoute
  '/account-profile/security': typeof AccountProfileSecurityRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/onboarding/setup-org': typeof OnboardingSetupOrgRoute
  '/org/$orgname': typeof OrgOrgnameRouteWithChildren
  '/auth/sign-up': typeof AuthSignUpLazyRoute
  '/account-profile/': typeof AccountProfileIndexRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/policy/aml-ctf-policy': typeof landingPolicyAmlCtfPolicyRoute
  '/policy/code-of-conduct-ethics-policy': typeof landingPolicyCodeOfConductEthicsPolicyRoute
  '/policy/complaint-handling-and-dispute-policy': typeof landingPolicyComplaintHandlingAndDisputePolicyRoute
  '/policy/cookie-policy': typeof landingPolicyCookiePolicyRoute
  '/policy/data-protection-policy': typeof landingPolicyDataProtectionPolicyRoute
  '/policy/developer-policy': typeof landingPolicyDeveloperPolicyRoute
  '/policy/fee-and-charges-policy': typeof landingPolicyFeeAndChargesPolicyRoute
  '/policy/kyc-policy': typeof landingPolicyKycPolicyRoute
  '/policy/privacy-policy': typeof landingPolicyPrivacyPolicyRoute
  '/policy/risk-management-policy': typeof landingPolicyRiskManagementPolicyRoute
  '/policy/security-policy': typeof landingPolicySecurityPolicyRoute
  '/policy/terms-and-condition': typeof landingPolicyTermsAndConditionRoute
  '/policy/terms-of-use': typeof landingPolicyTermsOfUseRoute
  '/account-profile/verify/contact': typeof AccountProfileVerifyContactRoute
  '/account-profile/verify/email': typeof AccountProfileVerifyEmailRoute
  '/auth/password-reset/$resetId': typeof AuthPasswordResetResetIdRoute
  '/onboarding/create-branch/$organization_id': typeof OnboardingCreateBranchOrganization_idRoute
  '/onboarding/organization/$organization_id': typeof OnboardingOrganizationOrganization_idRoute
  '/subscription': typeof landingSubscriptionIndexRoute
  '/onboarding/organization/': typeof OnboardingOrganizationIndexRoute
  '/org/$orgname/branch/$branchname': typeof OrgOrgnameBranchBranchnameRouteRouteWithChildren
  '/org/$orgname/branch/$branchname/': typeof OrgOrgnameBranchBranchnameIndexRoute
  '/org/$orgname/branch/$branchname/dashboard': typeof OrgOrgnameBranchBranchnamecommonDashboardRoute
  '/org/$orgname/branch/$branchname/accounting/accounts': typeof OrgOrgnameBranchBranchnameAccountingAccountsRoute
  '/org/$orgname/branch/$branchname/dev/documentation': typeof OrgOrgnameBranchBranchnameDevDocumentationRoute
  '/org/$orgname/branch/$branchname/settings': typeof OrgOrgnameBranchBranchnamecommonsettingsSettingsRoute
  '/org/$orgname/branch/$branchname/general-ledger/adjustment-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerAdjustmentEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/cash-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCashEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/check-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/check-voucher': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckVoucherRoute
  '/org/$orgname/branch/$branchname/general-ledger/deposit-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerDepositEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/general-ledger': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerGeneralLedgerRoute
  '/org/$orgname/branch/$branchname/general-ledger/journal-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/journal-voucher': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalVoucherRoute
  '/org/$orgname/branch/$branchname/general-ledger/online-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerOnlineEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/payment-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerPaymentEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/withdraw-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerWithdrawEntryRoute
  '/org/$orgname/branch/$branchname/transaction/disbursement': typeof OrgOrgnameBranchBranchnameemployeeTransactionDisbursementRoute
  '/org/$orgname/branch/$branchname/transaction/disbursement-transaction': typeof OrgOrgnameBranchBranchnameemployeeTransactionDisbursementTransactionRoute
  '/org/$orgname/branch/$branchname/transaction/payment-type': typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute
  '/org/$orgname/branch/$branchname/transaction/test': typeof OrgOrgnameBranchBranchnameemployeeTransactionTestRoute
  '/org/$orgname/branch/$branchname/transaction/transaction-batch': typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute
  '/org/$orgname/branch/$branchname/transaction/transactions': typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionsRoute
  '/org/$orgname/branch/$branchname/member-accounting-ledger': typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberAccountingLedgerRoute
  '/org/$orgname/branch/$branchname/view-members': typeof OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute
  '/org/$orgname/branch/$branchname/maintenance/banks': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute
  '/org/$orgname/branch/$branchname/maintenance/bills-and-coins': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute
  '/org/$orgname/branch/$branchname/approvals': typeof OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute
  '/org/$orgname/branch/$branchname/transaction': typeof OrgOrgnameBranchBranchnameemployeeTransactionIndexRoute
  '/org/$orgname/branch/$branchname/transaction/maintenance/cash-count': typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceCashCountRoute
  '/org/$orgname/branch/$branchname/transaction/maintenance/financial-statement-definition': typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceFinancialStatementDefinitionRoute
  '/org/$orgname/branch/$branchname/transaction/maintenance/general-ledger-definition': typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceGeneralLedgerDefinitionRoute
  '/org/$orgname/branch/$branchname/transaction/quick-transfer/deposit': typeof OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferDepositRoute
  '/org/$orgname/branch/$branchname/transaction/quick-transfer/withdraw': typeof OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferWithdrawRoute
  '/org/$orgname/branch/$branchname/members/member-center': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute
  '/org/$orgname/branch/$branchname/members/member-classification': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute
  '/org/$orgname/branch/$branchname/members/member-department': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberDepartmentRoute
  '/org/$orgname/branch/$branchname/members/member-gender': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute
  '/org/$orgname/branch/$branchname/members/member-group': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute
  '/org/$orgname/branch/$branchname/members/member-occupation': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute
  '/org/$orgname/branch/$branchname/members/member-types': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute
  '/org/$orgname/branch/$branchname/maintenance/invitation-code': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute
  '/org/$orgname/branch/$branchname/maintenance/account-category': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute
  '/org/$orgname/branch/$branchname/maintenance/account-classification': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute
  '/org/$orgname/branch/$branchname/member-profile/$memberId/$settings': typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteRouteWithChildren
  '/policy': typeof landingPolicyRouteRouteWithChildren
  '/about': typeof landingAboutRoute
  '/contact': typeof landingContactRoute
  '/developers': typeof landingDevelopersRoute
  '/frequently-asked-questions': typeof landingFrequentlyAskedQuestionsRoute
  '/test': typeof landingTestRoute
  '/account-profile/activity-logs': typeof AccountProfileActivityLogsRoute
  '/account-profile/profile': typeof AccountProfileProfileRoute
  '/account-profile/qr': typeof AccountProfileQrRoute
  '/account-profile/security': typeof AccountProfileSecurityRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/onboarding/setup-org': typeof OnboardingSetupOrgRoute
  '/org/$orgname': typeof OrgOrgnameRouteWithChildren
  '/auth/sign-up': typeof AuthSignUpLazyRoute
  '/': typeof landingIndexRoute
  '/account-profile': typeof AccountProfileIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/policy/aml-ctf-policy': typeof landingPolicyAmlCtfPolicyRoute
  '/policy/code-of-conduct-ethics-policy': typeof landingPolicyCodeOfConductEthicsPolicyRoute
  '/policy/complaint-handling-and-dispute-policy': typeof landingPolicyComplaintHandlingAndDisputePolicyRoute
  '/policy/cookie-policy': typeof landingPolicyCookiePolicyRoute
  '/policy/data-protection-policy': typeof landingPolicyDataProtectionPolicyRoute
  '/policy/developer-policy': typeof landingPolicyDeveloperPolicyRoute
  '/policy/fee-and-charges-policy': typeof landingPolicyFeeAndChargesPolicyRoute
  '/policy/kyc-policy': typeof landingPolicyKycPolicyRoute
  '/policy/privacy-policy': typeof landingPolicyPrivacyPolicyRoute
  '/policy/risk-management-policy': typeof landingPolicyRiskManagementPolicyRoute
  '/policy/security-policy': typeof landingPolicySecurityPolicyRoute
  '/policy/terms-and-condition': typeof landingPolicyTermsAndConditionRoute
  '/policy/terms-of-use': typeof landingPolicyTermsOfUseRoute
  '/account-profile/verify/contact': typeof AccountProfileVerifyContactRoute
  '/account-profile/verify/email': typeof AccountProfileVerifyEmailRoute
  '/auth/password-reset/$resetId': typeof AuthPasswordResetResetIdRoute
  '/onboarding/create-branch/$organization_id': typeof OnboardingCreateBranchOrganization_idRoute
  '/onboarding/organization/$organization_id': typeof OnboardingOrganizationOrganization_idRoute
  '/subscription': typeof landingSubscriptionIndexRoute
  '/onboarding/organization': typeof OnboardingOrganizationIndexRoute
  '/org/$orgname/branch/$branchname': typeof OrgOrgnameBranchBranchnameIndexRoute
  '/org/$orgname/branch/$branchname/dashboard': typeof OrgOrgnameBranchBranchnamecommonDashboardRoute
  '/org/$orgname/branch/$branchname/accounting/accounts': typeof OrgOrgnameBranchBranchnameAccountingAccountsRoute
  '/org/$orgname/branch/$branchname/dev/documentation': typeof OrgOrgnameBranchBranchnameDevDocumentationRoute
  '/org/$orgname/branch/$branchname/settings': typeof OrgOrgnameBranchBranchnamecommonsettingsSettingsRoute
  '/org/$orgname/branch/$branchname/general-ledger/adjustment-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerAdjustmentEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/cash-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCashEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/check-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/check-voucher': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckVoucherRoute
  '/org/$orgname/branch/$branchname/general-ledger/deposit-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerDepositEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/general-ledger': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerGeneralLedgerRoute
  '/org/$orgname/branch/$branchname/general-ledger/journal-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/journal-voucher': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalVoucherRoute
  '/org/$orgname/branch/$branchname/general-ledger/online-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerOnlineEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/payment-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerPaymentEntryRoute
  '/org/$orgname/branch/$branchname/general-ledger/withdraw-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerWithdrawEntryRoute
  '/org/$orgname/branch/$branchname/transaction/disbursement': typeof OrgOrgnameBranchBranchnameemployeeTransactionDisbursementRoute
  '/org/$orgname/branch/$branchname/transaction/disbursement-transaction': typeof OrgOrgnameBranchBranchnameemployeeTransactionDisbursementTransactionRoute
  '/org/$orgname/branch/$branchname/transaction/payment-type': typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute
  '/org/$orgname/branch/$branchname/transaction/test': typeof OrgOrgnameBranchBranchnameemployeeTransactionTestRoute
  '/org/$orgname/branch/$branchname/transaction/transaction-batch': typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute
  '/org/$orgname/branch/$branchname/transaction/transactions': typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionsRoute
  '/org/$orgname/branch/$branchname/member-accounting-ledger': typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberAccountingLedgerRoute
  '/org/$orgname/branch/$branchname/view-members': typeof OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute
  '/org/$orgname/branch/$branchname/maintenance/banks': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute
  '/org/$orgname/branch/$branchname/maintenance/bills-and-coins': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute
  '/org/$orgname/branch/$branchname/approvals': typeof OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute
  '/org/$orgname/branch/$branchname/transaction': typeof OrgOrgnameBranchBranchnameemployeeTransactionIndexRoute
  '/org/$orgname/branch/$branchname/transaction/maintenance/cash-count': typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceCashCountRoute
  '/org/$orgname/branch/$branchname/transaction/maintenance/financial-statement-definition': typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceFinancialStatementDefinitionRoute
  '/org/$orgname/branch/$branchname/transaction/maintenance/general-ledger-definition': typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceGeneralLedgerDefinitionRoute
  '/org/$orgname/branch/$branchname/transaction/quick-transfer/deposit': typeof OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferDepositRoute
  '/org/$orgname/branch/$branchname/transaction/quick-transfer/withdraw': typeof OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferWithdrawRoute
  '/org/$orgname/branch/$branchname/members/member-center': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute
  '/org/$orgname/branch/$branchname/members/member-classification': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute
  '/org/$orgname/branch/$branchname/members/member-department': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberDepartmentRoute
  '/org/$orgname/branch/$branchname/members/member-gender': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute
  '/org/$orgname/branch/$branchname/members/member-group': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute
  '/org/$orgname/branch/$branchname/members/member-occupation': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute
  '/org/$orgname/branch/$branchname/members/member-types': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute
  '/org/$orgname/branch/$branchname/maintenance/invitation-code': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute
  '/org/$orgname/branch/$branchname/maintenance/account-category': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute
  '/org/$orgname/branch/$branchname/maintenance/account-classification': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute
  '/org/$orgname/branch/$branchname/member-profile/$memberId/$settings': typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(landing)': typeof landingRouteRouteWithChildren
  '/account-profile': typeof AccountProfileRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/(landing)/policy': typeof landingPolicyRouteRouteWithChildren
  '/onboarding/organization': typeof OnboardingOrganizationRouteRouteWithChildren
  '/(landing)/about': typeof landingAboutRoute
  '/(landing)/contact': typeof landingContactRoute
  '/(landing)/developers': typeof landingDevelopersRoute
  '/(landing)/frequently-asked-questions': typeof landingFrequentlyAskedQuestionsRoute
  '/(landing)/test': typeof landingTestRoute
  '/account-profile/activity-logs': typeof AccountProfileActivityLogsRoute
  '/account-profile/profile': typeof AccountProfileProfileRoute
  '/account-profile/qr': typeof AccountProfileQrRoute
  '/account-profile/security': typeof AccountProfileSecurityRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/onboarding/setup-org': typeof OnboardingSetupOrgRoute
  '/org/$orgname': typeof OrgOrgnameRouteWithChildren
  '/auth/sign-up': typeof AuthSignUpLazyRoute
  '/(landing)/': typeof landingIndexRoute
  '/account-profile/': typeof AccountProfileIndexRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/(landing)/policy/aml-ctf-policy': typeof landingPolicyAmlCtfPolicyRoute
  '/(landing)/policy/code-of-conduct-ethics-policy': typeof landingPolicyCodeOfConductEthicsPolicyRoute
  '/(landing)/policy/complaint-handling-and-dispute-policy': typeof landingPolicyComplaintHandlingAndDisputePolicyRoute
  '/(landing)/policy/cookie-policy': typeof landingPolicyCookiePolicyRoute
  '/(landing)/policy/data-protection-policy': typeof landingPolicyDataProtectionPolicyRoute
  '/(landing)/policy/developer-policy': typeof landingPolicyDeveloperPolicyRoute
  '/(landing)/policy/fee-and-charges-policy': typeof landingPolicyFeeAndChargesPolicyRoute
  '/(landing)/policy/kyc-policy': typeof landingPolicyKycPolicyRoute
  '/(landing)/policy/privacy-policy': typeof landingPolicyPrivacyPolicyRoute
  '/(landing)/policy/risk-management-policy': typeof landingPolicyRiskManagementPolicyRoute
  '/(landing)/policy/security-policy': typeof landingPolicySecurityPolicyRoute
  '/(landing)/policy/terms-and-condition': typeof landingPolicyTermsAndConditionRoute
  '/(landing)/policy/terms-of-use': typeof landingPolicyTermsOfUseRoute
  '/account-profile/verify/contact': typeof AccountProfileVerifyContactRoute
  '/account-profile/verify/email': typeof AccountProfileVerifyEmailRoute
  '/auth/password-reset/$resetId': typeof AuthPasswordResetResetIdRoute
  '/onboarding/create-branch/$organization_id': typeof OnboardingCreateBranchOrganization_idRoute
  '/onboarding/organization/$organization_id': typeof OnboardingOrganizationOrganization_idRoute
  '/(landing)/subscription/': typeof landingSubscriptionIndexRoute
  '/onboarding/organization/': typeof OnboardingOrganizationIndexRoute
  '/org/$orgname/branch/$branchname': typeof OrgOrgnameBranchBranchnameRouteRouteWithChildren
  '/org/$orgname/branch/$branchname/': typeof OrgOrgnameBranchBranchnameIndexRoute
  '/org/$orgname/branch/$branchname/(common)/dashboard': typeof OrgOrgnameBranchBranchnamecommonDashboardRoute
  '/org/$orgname/branch/$branchname/accounting/accounts': typeof OrgOrgnameBranchBranchnameAccountingAccountsRoute
  '/org/$orgname/branch/$branchname/dev/documentation': typeof OrgOrgnameBranchBranchnameDevDocumentationRoute
  '/org/$orgname/branch/$branchname/(common)/(settings)/settings': typeof OrgOrgnameBranchBranchnamecommonsettingsSettingsRoute
  '/org/$orgname/branch/$branchname/(employee)/general-ledger/adjustment-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerAdjustmentEntryRoute
  '/org/$orgname/branch/$branchname/(employee)/general-ledger/cash-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCashEntryRoute
  '/org/$orgname/branch/$branchname/(employee)/general-ledger/check-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckEntryRoute
  '/org/$orgname/branch/$branchname/(employee)/general-ledger/check-voucher': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckVoucherRoute
  '/org/$orgname/branch/$branchname/(employee)/general-ledger/deposit-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerDepositEntryRoute
  '/org/$orgname/branch/$branchname/(employee)/general-ledger/general-ledger': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerGeneralLedgerRoute
  '/org/$orgname/branch/$branchname/(employee)/general-ledger/journal-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalEntryRoute
  '/org/$orgname/branch/$branchname/(employee)/general-ledger/journal-voucher': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalVoucherRoute
  '/org/$orgname/branch/$branchname/(employee)/general-ledger/online-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerOnlineEntryRoute
  '/org/$orgname/branch/$branchname/(employee)/general-ledger/payment-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerPaymentEntryRoute
  '/org/$orgname/branch/$branchname/(employee)/general-ledger/withdraw-entry': typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerWithdrawEntryRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/disbursement': typeof OrgOrgnameBranchBranchnameemployeeTransactionDisbursementRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/disbursement-transaction': typeof OrgOrgnameBranchBranchnameemployeeTransactionDisbursementTransactionRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/payment-type': typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/test': typeof OrgOrgnameBranchBranchnameemployeeTransactionTestRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/transaction-batch': typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/transactions': typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionsRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/member-accounting-ledger': typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberAccountingLedgerRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/view-members': typeof OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/banks': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/bills-and-coins': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute
  '/org/$orgname/branch/$branchname/(employee)/approvals/': typeof OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/': typeof OrgOrgnameBranchBranchnameemployeeTransactionIndexRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/maintenance/cash-count': typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceCashCountRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/maintenance/financial-statement-definition': typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceFinancialStatementDefinitionRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/maintenance/general-ledger-definition': typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceGeneralLedgerDefinitionRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/quick-transfer/deposit': typeof OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferDepositRoute
  '/org/$orgname/branch/$branchname/(employee)/transaction/quick-transfer/withdraw': typeof OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferWithdrawRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-center': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-classification': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-department': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberDepartmentRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-gender': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-group': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-occupation': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-types': typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(access-and-onboarding)/invitation-code': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-category': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute
  '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-classification': typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute
  '/org/$orgname/branch/$branchname/(maintenance)/(members)/member-profile/$memberId/$settings/': typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account-profile'
    | '/auth'
    | '/onboarding'
    | '/policy'
    | '/onboarding/organization'
    | '/about'
    | '/contact'
    | '/developers'
    | '/frequently-asked-questions'
    | '/test'
    | '/account-profile/activity-logs'
    | '/account-profile/profile'
    | '/account-profile/qr'
    | '/account-profile/security'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/onboarding/setup-org'
    | '/org/$orgname'
    | '/auth/sign-up'
    | '/account-profile/'
    | '/onboarding/'
    | '/policy/aml-ctf-policy'
    | '/policy/code-of-conduct-ethics-policy'
    | '/policy/complaint-handling-and-dispute-policy'
    | '/policy/cookie-policy'
    | '/policy/data-protection-policy'
    | '/policy/developer-policy'
    | '/policy/fee-and-charges-policy'
    | '/policy/kyc-policy'
    | '/policy/privacy-policy'
    | '/policy/risk-management-policy'
    | '/policy/security-policy'
    | '/policy/terms-and-condition'
    | '/policy/terms-of-use'
    | '/account-profile/verify/contact'
    | '/account-profile/verify/email'
    | '/auth/password-reset/$resetId'
    | '/onboarding/create-branch/$organization_id'
    | '/onboarding/organization/$organization_id'
    | '/subscription'
    | '/onboarding/organization/'
    | '/org/$orgname/branch/$branchname'
    | '/org/$orgname/branch/$branchname/'
    | '/org/$orgname/branch/$branchname/dashboard'
    | '/org/$orgname/branch/$branchname/accounting/accounts'
    | '/org/$orgname/branch/$branchname/dev/documentation'
    | '/org/$orgname/branch/$branchname/settings'
    | '/org/$orgname/branch/$branchname/general-ledger/adjustment-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/cash-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/check-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/check-voucher'
    | '/org/$orgname/branch/$branchname/general-ledger/deposit-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/general-ledger'
    | '/org/$orgname/branch/$branchname/general-ledger/journal-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/journal-voucher'
    | '/org/$orgname/branch/$branchname/general-ledger/online-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/payment-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/withdraw-entry'
    | '/org/$orgname/branch/$branchname/transaction/disbursement'
    | '/org/$orgname/branch/$branchname/transaction/disbursement-transaction'
    | '/org/$orgname/branch/$branchname/transaction/payment-type'
    | '/org/$orgname/branch/$branchname/transaction/test'
    | '/org/$orgname/branch/$branchname/transaction/transaction-batch'
    | '/org/$orgname/branch/$branchname/transaction/transactions'
    | '/org/$orgname/branch/$branchname/member-accounting-ledger'
    | '/org/$orgname/branch/$branchname/view-members'
    | '/org/$orgname/branch/$branchname/maintenance/banks'
    | '/org/$orgname/branch/$branchname/maintenance/bills-and-coins'
    | '/org/$orgname/branch/$branchname/approvals'
    | '/org/$orgname/branch/$branchname/transaction'
    | '/org/$orgname/branch/$branchname/transaction/maintenance/cash-count'
    | '/org/$orgname/branch/$branchname/transaction/maintenance/financial-statement-definition'
    | '/org/$orgname/branch/$branchname/transaction/maintenance/general-ledger-definition'
    | '/org/$orgname/branch/$branchname/transaction/quick-transfer/deposit'
    | '/org/$orgname/branch/$branchname/transaction/quick-transfer/withdraw'
    | '/org/$orgname/branch/$branchname/members/member-center'
    | '/org/$orgname/branch/$branchname/members/member-classification'
    | '/org/$orgname/branch/$branchname/members/member-department'
    | '/org/$orgname/branch/$branchname/members/member-gender'
    | '/org/$orgname/branch/$branchname/members/member-group'
    | '/org/$orgname/branch/$branchname/members/member-occupation'
    | '/org/$orgname/branch/$branchname/members/member-types'
    | '/org/$orgname/branch/$branchname/maintenance/invitation-code'
    | '/org/$orgname/branch/$branchname/maintenance/account-category'
    | '/org/$orgname/branch/$branchname/maintenance/account-classification'
    | '/org/$orgname/branch/$branchname/member-profile/$memberId/$settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/policy'
    | '/about'
    | '/contact'
    | '/developers'
    | '/frequently-asked-questions'
    | '/test'
    | '/account-profile/activity-logs'
    | '/account-profile/profile'
    | '/account-profile/qr'
    | '/account-profile/security'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/onboarding/setup-org'
    | '/org/$orgname'
    | '/auth/sign-up'
    | '/'
    | '/account-profile'
    | '/onboarding'
    | '/policy/aml-ctf-policy'
    | '/policy/code-of-conduct-ethics-policy'
    | '/policy/complaint-handling-and-dispute-policy'
    | '/policy/cookie-policy'
    | '/policy/data-protection-policy'
    | '/policy/developer-policy'
    | '/policy/fee-and-charges-policy'
    | '/policy/kyc-policy'
    | '/policy/privacy-policy'
    | '/policy/risk-management-policy'
    | '/policy/security-policy'
    | '/policy/terms-and-condition'
    | '/policy/terms-of-use'
    | '/account-profile/verify/contact'
    | '/account-profile/verify/email'
    | '/auth/password-reset/$resetId'
    | '/onboarding/create-branch/$organization_id'
    | '/onboarding/organization/$organization_id'
    | '/subscription'
    | '/onboarding/organization'
    | '/org/$orgname/branch/$branchname'
    | '/org/$orgname/branch/$branchname/dashboard'
    | '/org/$orgname/branch/$branchname/accounting/accounts'
    | '/org/$orgname/branch/$branchname/dev/documentation'
    | '/org/$orgname/branch/$branchname/settings'
    | '/org/$orgname/branch/$branchname/general-ledger/adjustment-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/cash-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/check-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/check-voucher'
    | '/org/$orgname/branch/$branchname/general-ledger/deposit-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/general-ledger'
    | '/org/$orgname/branch/$branchname/general-ledger/journal-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/journal-voucher'
    | '/org/$orgname/branch/$branchname/general-ledger/online-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/payment-entry'
    | '/org/$orgname/branch/$branchname/general-ledger/withdraw-entry'
    | '/org/$orgname/branch/$branchname/transaction/disbursement'
    | '/org/$orgname/branch/$branchname/transaction/disbursement-transaction'
    | '/org/$orgname/branch/$branchname/transaction/payment-type'
    | '/org/$orgname/branch/$branchname/transaction/test'
    | '/org/$orgname/branch/$branchname/transaction/transaction-batch'
    | '/org/$orgname/branch/$branchname/transaction/transactions'
    | '/org/$orgname/branch/$branchname/member-accounting-ledger'
    | '/org/$orgname/branch/$branchname/view-members'
    | '/org/$orgname/branch/$branchname/maintenance/banks'
    | '/org/$orgname/branch/$branchname/maintenance/bills-and-coins'
    | '/org/$orgname/branch/$branchname/approvals'
    | '/org/$orgname/branch/$branchname/transaction'
    | '/org/$orgname/branch/$branchname/transaction/maintenance/cash-count'
    | '/org/$orgname/branch/$branchname/transaction/maintenance/financial-statement-definition'
    | '/org/$orgname/branch/$branchname/transaction/maintenance/general-ledger-definition'
    | '/org/$orgname/branch/$branchname/transaction/quick-transfer/deposit'
    | '/org/$orgname/branch/$branchname/transaction/quick-transfer/withdraw'
    | '/org/$orgname/branch/$branchname/members/member-center'
    | '/org/$orgname/branch/$branchname/members/member-classification'
    | '/org/$orgname/branch/$branchname/members/member-department'
    | '/org/$orgname/branch/$branchname/members/member-gender'
    | '/org/$orgname/branch/$branchname/members/member-group'
    | '/org/$orgname/branch/$branchname/members/member-occupation'
    | '/org/$orgname/branch/$branchname/members/member-types'
    | '/org/$orgname/branch/$branchname/maintenance/invitation-code'
    | '/org/$orgname/branch/$branchname/maintenance/account-category'
    | '/org/$orgname/branch/$branchname/maintenance/account-classification'
    | '/org/$orgname/branch/$branchname/member-profile/$memberId/$settings'
  id:
    | '__root__'
    | '/(landing)'
    | '/account-profile'
    | '/auth'
    | '/onboarding'
    | '/(landing)/policy'
    | '/onboarding/organization'
    | '/(landing)/about'
    | '/(landing)/contact'
    | '/(landing)/developers'
    | '/(landing)/frequently-asked-questions'
    | '/(landing)/test'
    | '/account-profile/activity-logs'
    | '/account-profile/profile'
    | '/account-profile/qr'
    | '/account-profile/security'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/onboarding/setup-org'
    | '/org/$orgname'
    | '/auth/sign-up'
    | '/(landing)/'
    | '/account-profile/'
    | '/onboarding/'
    | '/(landing)/policy/aml-ctf-policy'
    | '/(landing)/policy/code-of-conduct-ethics-policy'
    | '/(landing)/policy/complaint-handling-and-dispute-policy'
    | '/(landing)/policy/cookie-policy'
    | '/(landing)/policy/data-protection-policy'
    | '/(landing)/policy/developer-policy'
    | '/(landing)/policy/fee-and-charges-policy'
    | '/(landing)/policy/kyc-policy'
    | '/(landing)/policy/privacy-policy'
    | '/(landing)/policy/risk-management-policy'
    | '/(landing)/policy/security-policy'
    | '/(landing)/policy/terms-and-condition'
    | '/(landing)/policy/terms-of-use'
    | '/account-profile/verify/contact'
    | '/account-profile/verify/email'
    | '/auth/password-reset/$resetId'
    | '/onboarding/create-branch/$organization_id'
    | '/onboarding/organization/$organization_id'
    | '/(landing)/subscription/'
    | '/onboarding/organization/'
    | '/org/$orgname/branch/$branchname'
    | '/org/$orgname/branch/$branchname/'
    | '/org/$orgname/branch/$branchname/(common)/dashboard'
    | '/org/$orgname/branch/$branchname/accounting/accounts'
    | '/org/$orgname/branch/$branchname/dev/documentation'
    | '/org/$orgname/branch/$branchname/(common)/(settings)/settings'
    | '/org/$orgname/branch/$branchname/(employee)/general-ledger/adjustment-entry'
    | '/org/$orgname/branch/$branchname/(employee)/general-ledger/cash-entry'
    | '/org/$orgname/branch/$branchname/(employee)/general-ledger/check-entry'
    | '/org/$orgname/branch/$branchname/(employee)/general-ledger/check-voucher'
    | '/org/$orgname/branch/$branchname/(employee)/general-ledger/deposit-entry'
    | '/org/$orgname/branch/$branchname/(employee)/general-ledger/general-ledger'
    | '/org/$orgname/branch/$branchname/(employee)/general-ledger/journal-entry'
    | '/org/$orgname/branch/$branchname/(employee)/general-ledger/journal-voucher'
    | '/org/$orgname/branch/$branchname/(employee)/general-ledger/online-entry'
    | '/org/$orgname/branch/$branchname/(employee)/general-ledger/payment-entry'
    | '/org/$orgname/branch/$branchname/(employee)/general-ledger/withdraw-entry'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/disbursement'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/disbursement-transaction'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/payment-type'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/test'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/transaction-batch'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/transactions'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/member-accounting-ledger'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/view-members'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/banks'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/bills-and-coins'
    | '/org/$orgname/branch/$branchname/(employee)/approvals/'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/maintenance/cash-count'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/maintenance/financial-statement-definition'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/maintenance/general-ledger-definition'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/quick-transfer/deposit'
    | '/org/$orgname/branch/$branchname/(employee)/transaction/quick-transfer/withdraw'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-center'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-classification'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-department'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-gender'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-group'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-occupation'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-types'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(access-and-onboarding)/invitation-code'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-category'
    | '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-classification'
    | '/org/$orgname/branch/$branchname/(maintenance)/(members)/member-profile/$memberId/$settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  landingRouteRoute: typeof landingRouteRouteWithChildren
  AccountProfileRouteRoute: typeof AccountProfileRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  OnboardingRouteRoute: typeof OnboardingRouteRouteWithChildren
  OrgOrgnameRoute: typeof OrgOrgnameRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account-profile': {
      id: '/account-profile'
      path: '/account-profile'
      fullPath: '/account-profile'
      preLoaderRoute: typeof AccountProfileRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(landing)': {
      id: '/(landing)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof landingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/'
      fullPath: '/onboarding/'
      preLoaderRoute: typeof OnboardingIndexRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/account-profile/': {
      id: '/account-profile/'
      path: '/'
      fullPath: '/account-profile/'
      preLoaderRoute: typeof AccountProfileIndexRouteImport
      parentRoute: typeof AccountProfileRouteRoute
    }
    '/(landing)/': {
      id: '/(landing)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof landingIndexRouteImport
      parentRoute: typeof landingRouteRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpLazyRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/org/$orgname': {
      id: '/org/$orgname'
      path: '/org/$orgname'
      fullPath: '/org/$orgname'
      preLoaderRoute: typeof OrgOrgnameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/setup-org': {
      id: '/onboarding/setup-org'
      path: '/setup-org'
      fullPath: '/onboarding/setup-org'
      preLoaderRoute: typeof OnboardingSetupOrgRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/account-profile/security': {
      id: '/account-profile/security'
      path: '/security'
      fullPath: '/account-profile/security'
      preLoaderRoute: typeof AccountProfileSecurityRouteImport
      parentRoute: typeof AccountProfileRouteRoute
    }
    '/account-profile/qr': {
      id: '/account-profile/qr'
      path: '/qr'
      fullPath: '/account-profile/qr'
      preLoaderRoute: typeof AccountProfileQrRouteImport
      parentRoute: typeof AccountProfileRouteRoute
    }
    '/account-profile/profile': {
      id: '/account-profile/profile'
      path: '/profile'
      fullPath: '/account-profile/profile'
      preLoaderRoute: typeof AccountProfileProfileRouteImport
      parentRoute: typeof AccountProfileRouteRoute
    }
    '/account-profile/activity-logs': {
      id: '/account-profile/activity-logs'
      path: '/activity-logs'
      fullPath: '/account-profile/activity-logs'
      preLoaderRoute: typeof AccountProfileActivityLogsRouteImport
      parentRoute: typeof AccountProfileRouteRoute
    }
    '/(landing)/test': {
      id: '/(landing)/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof landingTestRouteImport
      parentRoute: typeof landingRouteRoute
    }
    '/(landing)/frequently-asked-questions': {
      id: '/(landing)/frequently-asked-questions'
      path: '/frequently-asked-questions'
      fullPath: '/frequently-asked-questions'
      preLoaderRoute: typeof landingFrequentlyAskedQuestionsRouteImport
      parentRoute: typeof landingRouteRoute
    }
    '/(landing)/developers': {
      id: '/(landing)/developers'
      path: '/developers'
      fullPath: '/developers'
      preLoaderRoute: typeof landingDevelopersRouteImport
      parentRoute: typeof landingRouteRoute
    }
    '/(landing)/contact': {
      id: '/(landing)/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof landingContactRouteImport
      parentRoute: typeof landingRouteRoute
    }
    '/(landing)/about': {
      id: '/(landing)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof landingAboutRouteImport
      parentRoute: typeof landingRouteRoute
    }
    '/onboarding/organization': {
      id: '/onboarding/organization'
      path: '/organization'
      fullPath: '/onboarding/organization'
      preLoaderRoute: typeof OnboardingOrganizationRouteRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/(landing)/policy': {
      id: '/(landing)/policy'
      path: '/policy'
      fullPath: '/policy'
      preLoaderRoute: typeof landingPolicyRouteRouteImport
      parentRoute: typeof landingRouteRoute
    }
    '/onboarding/organization/': {
      id: '/onboarding/organization/'
      path: '/'
      fullPath: '/onboarding/organization/'
      preLoaderRoute: typeof OnboardingOrganizationIndexRouteImport
      parentRoute: typeof OnboardingOrganizationRouteRoute
    }
    '/(landing)/subscription/': {
      id: '/(landing)/subscription/'
      path: '/subscription'
      fullPath: '/subscription'
      preLoaderRoute: typeof landingSubscriptionIndexRouteImport
      parentRoute: typeof landingRouteRoute
    }
    '/onboarding/organization/$organization_id': {
      id: '/onboarding/organization/$organization_id'
      path: '/$organization_id'
      fullPath: '/onboarding/organization/$organization_id'
      preLoaderRoute: typeof OnboardingOrganizationOrganization_idRouteImport
      parentRoute: typeof OnboardingOrganizationRouteRoute
    }
    '/onboarding/create-branch/$organization_id': {
      id: '/onboarding/create-branch/$organization_id'
      path: '/create-branch/$organization_id'
      fullPath: '/onboarding/create-branch/$organization_id'
      preLoaderRoute: typeof OnboardingCreateBranchOrganization_idRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/auth/password-reset/$resetId': {
      id: '/auth/password-reset/$resetId'
      path: '/password-reset/$resetId'
      fullPath: '/auth/password-reset/$resetId'
      preLoaderRoute: typeof AuthPasswordResetResetIdRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/account-profile/verify/email': {
      id: '/account-profile/verify/email'
      path: '/verify/email'
      fullPath: '/account-profile/verify/email'
      preLoaderRoute: typeof AccountProfileVerifyEmailRouteImport
      parentRoute: typeof AccountProfileRouteRoute
    }
    '/account-profile/verify/contact': {
      id: '/account-profile/verify/contact'
      path: '/verify/contact'
      fullPath: '/account-profile/verify/contact'
      preLoaderRoute: typeof AccountProfileVerifyContactRouteImport
      parentRoute: typeof AccountProfileRouteRoute
    }
    '/(landing)/policy/terms-of-use': {
      id: '/(landing)/policy/terms-of-use'
      path: '/terms-of-use'
      fullPath: '/policy/terms-of-use'
      preLoaderRoute: typeof landingPolicyTermsOfUseRouteImport
      parentRoute: typeof landingPolicyRouteRoute
    }
    '/(landing)/policy/terms-and-condition': {
      id: '/(landing)/policy/terms-and-condition'
      path: '/terms-and-condition'
      fullPath: '/policy/terms-and-condition'
      preLoaderRoute: typeof landingPolicyTermsAndConditionRouteImport
      parentRoute: typeof landingPolicyRouteRoute
    }
    '/(landing)/policy/security-policy': {
      id: '/(landing)/policy/security-policy'
      path: '/security-policy'
      fullPath: '/policy/security-policy'
      preLoaderRoute: typeof landingPolicySecurityPolicyRouteImport
      parentRoute: typeof landingPolicyRouteRoute
    }
    '/(landing)/policy/risk-management-policy': {
      id: '/(landing)/policy/risk-management-policy'
      path: '/risk-management-policy'
      fullPath: '/policy/risk-management-policy'
      preLoaderRoute: typeof landingPolicyRiskManagementPolicyRouteImport
      parentRoute: typeof landingPolicyRouteRoute
    }
    '/(landing)/policy/privacy-policy': {
      id: '/(landing)/policy/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/policy/privacy-policy'
      preLoaderRoute: typeof landingPolicyPrivacyPolicyRouteImport
      parentRoute: typeof landingPolicyRouteRoute
    }
    '/(landing)/policy/kyc-policy': {
      id: '/(landing)/policy/kyc-policy'
      path: '/kyc-policy'
      fullPath: '/policy/kyc-policy'
      preLoaderRoute: typeof landingPolicyKycPolicyRouteImport
      parentRoute: typeof landingPolicyRouteRoute
    }
    '/(landing)/policy/fee-and-charges-policy': {
      id: '/(landing)/policy/fee-and-charges-policy'
      path: '/fee-and-charges-policy'
      fullPath: '/policy/fee-and-charges-policy'
      preLoaderRoute: typeof landingPolicyFeeAndChargesPolicyRouteImport
      parentRoute: typeof landingPolicyRouteRoute
    }
    '/(landing)/policy/developer-policy': {
      id: '/(landing)/policy/developer-policy'
      path: '/developer-policy'
      fullPath: '/policy/developer-policy'
      preLoaderRoute: typeof landingPolicyDeveloperPolicyRouteImport
      parentRoute: typeof landingPolicyRouteRoute
    }
    '/(landing)/policy/data-protection-policy': {
      id: '/(landing)/policy/data-protection-policy'
      path: '/data-protection-policy'
      fullPath: '/policy/data-protection-policy'
      preLoaderRoute: typeof landingPolicyDataProtectionPolicyRouteImport
      parentRoute: typeof landingPolicyRouteRoute
    }
    '/(landing)/policy/cookie-policy': {
      id: '/(landing)/policy/cookie-policy'
      path: '/cookie-policy'
      fullPath: '/policy/cookie-policy'
      preLoaderRoute: typeof landingPolicyCookiePolicyRouteImport
      parentRoute: typeof landingPolicyRouteRoute
    }
    '/(landing)/policy/complaint-handling-and-dispute-policy': {
      id: '/(landing)/policy/complaint-handling-and-dispute-policy'
      path: '/complaint-handling-and-dispute-policy'
      fullPath: '/policy/complaint-handling-and-dispute-policy'
      preLoaderRoute: typeof landingPolicyComplaintHandlingAndDisputePolicyRouteImport
      parentRoute: typeof landingPolicyRouteRoute
    }
    '/(landing)/policy/code-of-conduct-ethics-policy': {
      id: '/(landing)/policy/code-of-conduct-ethics-policy'
      path: '/code-of-conduct-ethics-policy'
      fullPath: '/policy/code-of-conduct-ethics-policy'
      preLoaderRoute: typeof landingPolicyCodeOfConductEthicsPolicyRouteImport
      parentRoute: typeof landingPolicyRouteRoute
    }
    '/(landing)/policy/aml-ctf-policy': {
      id: '/(landing)/policy/aml-ctf-policy'
      path: '/aml-ctf-policy'
      fullPath: '/policy/aml-ctf-policy'
      preLoaderRoute: typeof landingPolicyAmlCtfPolicyRouteImport
      parentRoute: typeof landingPolicyRouteRoute
    }
    '/org/$orgname/branch/$branchname': {
      id: '/org/$orgname/branch/$branchname'
      path: '/branch/$branchname'
      fullPath: '/org/$orgname/branch/$branchname'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameRouteRouteImport
      parentRoute: typeof OrgOrgnameRoute
    }
    '/org/$orgname/branch/$branchname/': {
      id: '/org/$orgname/branch/$branchname/'
      path: '/'
      fullPath: '/org/$orgname/branch/$branchname/'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameIndexRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/dev/documentation': {
      id: '/org/$orgname/branch/$branchname/dev/documentation'
      path: '/dev/documentation'
      fullPath: '/org/$orgname/branch/$branchname/dev/documentation'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameDevDocumentationRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/accounting/accounts': {
      id: '/org/$orgname/branch/$branchname/accounting/accounts'
      path: '/accounting/accounts'
      fullPath: '/org/$orgname/branch/$branchname/accounting/accounts'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameAccountingAccountsRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(common)/dashboard': {
      id: '/org/$orgname/branch/$branchname/(common)/dashboard'
      path: '/dashboard'
      fullPath: '/org/$orgname/branch/$branchname/dashboard'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamecommonDashboardRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/'
      path: '/transaction'
      fullPath: '/org/$orgname/branch/$branchname/transaction'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionIndexRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/approvals/': {
      id: '/org/$orgname/branch/$branchname/(employee)/approvals/'
      path: '/approvals'
      fullPath: '/org/$orgname/branch/$branchname/approvals'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeApprovalsIndexRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/bills-and-coins': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/bills-and-coins'
      path: '/maintenance/bills-and-coins'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/bills-and-coins'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/banks': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/banks'
      path: '/maintenance/banks'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/banks'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/view-members': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/view-members'
      path: '/view-members'
      fullPath: '/org/$orgname/branch/$branchname/view-members'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/member-accounting-ledger': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/member-accounting-ledger'
      path: '/member-accounting-ledger'
      fullPath: '/org/$orgname/branch/$branchname/member-accounting-ledger'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberAccountingLedgerRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/transactions': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/transactions'
      path: '/transaction/transactions'
      fullPath: '/org/$orgname/branch/$branchname/transaction/transactions'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionsRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/transaction-batch': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/transaction-batch'
      path: '/transaction/transaction-batch'
      fullPath: '/org/$orgname/branch/$branchname/transaction/transaction-batch'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/test': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/test'
      path: '/transaction/test'
      fullPath: '/org/$orgname/branch/$branchname/transaction/test'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionTestRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/payment-type': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/payment-type'
      path: '/transaction/payment-type'
      fullPath: '/org/$orgname/branch/$branchname/transaction/payment-type'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/disbursement-transaction': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/disbursement-transaction'
      path: '/transaction/disbursement-transaction'
      fullPath: '/org/$orgname/branch/$branchname/transaction/disbursement-transaction'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionDisbursementTransactionRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/disbursement': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/disbursement'
      path: '/transaction/disbursement'
      fullPath: '/org/$orgname/branch/$branchname/transaction/disbursement'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionDisbursementRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/general-ledger/withdraw-entry': {
      id: '/org/$orgname/branch/$branchname/(employee)/general-ledger/withdraw-entry'
      path: '/general-ledger/withdraw-entry'
      fullPath: '/org/$orgname/branch/$branchname/general-ledger/withdraw-entry'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerWithdrawEntryRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/general-ledger/payment-entry': {
      id: '/org/$orgname/branch/$branchname/(employee)/general-ledger/payment-entry'
      path: '/general-ledger/payment-entry'
      fullPath: '/org/$orgname/branch/$branchname/general-ledger/payment-entry'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerPaymentEntryRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/general-ledger/online-entry': {
      id: '/org/$orgname/branch/$branchname/(employee)/general-ledger/online-entry'
      path: '/general-ledger/online-entry'
      fullPath: '/org/$orgname/branch/$branchname/general-ledger/online-entry'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerOnlineEntryRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/general-ledger/journal-voucher': {
      id: '/org/$orgname/branch/$branchname/(employee)/general-ledger/journal-voucher'
      path: '/general-ledger/journal-voucher'
      fullPath: '/org/$orgname/branch/$branchname/general-ledger/journal-voucher'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalVoucherRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/general-ledger/journal-entry': {
      id: '/org/$orgname/branch/$branchname/(employee)/general-ledger/journal-entry'
      path: '/general-ledger/journal-entry'
      fullPath: '/org/$orgname/branch/$branchname/general-ledger/journal-entry'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalEntryRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/general-ledger/general-ledger': {
      id: '/org/$orgname/branch/$branchname/(employee)/general-ledger/general-ledger'
      path: '/general-ledger/general-ledger'
      fullPath: '/org/$orgname/branch/$branchname/general-ledger/general-ledger'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerGeneralLedgerRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/general-ledger/deposit-entry': {
      id: '/org/$orgname/branch/$branchname/(employee)/general-ledger/deposit-entry'
      path: '/general-ledger/deposit-entry'
      fullPath: '/org/$orgname/branch/$branchname/general-ledger/deposit-entry'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerDepositEntryRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/general-ledger/check-voucher': {
      id: '/org/$orgname/branch/$branchname/(employee)/general-ledger/check-voucher'
      path: '/general-ledger/check-voucher'
      fullPath: '/org/$orgname/branch/$branchname/general-ledger/check-voucher'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckVoucherRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/general-ledger/check-entry': {
      id: '/org/$orgname/branch/$branchname/(employee)/general-ledger/check-entry'
      path: '/general-ledger/check-entry'
      fullPath: '/org/$orgname/branch/$branchname/general-ledger/check-entry'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckEntryRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/general-ledger/cash-entry': {
      id: '/org/$orgname/branch/$branchname/(employee)/general-ledger/cash-entry'
      path: '/general-ledger/cash-entry'
      fullPath: '/org/$orgname/branch/$branchname/general-ledger/cash-entry'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCashEntryRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/general-ledger/adjustment-entry': {
      id: '/org/$orgname/branch/$branchname/(employee)/general-ledger/adjustment-entry'
      path: '/general-ledger/adjustment-entry'
      fullPath: '/org/$orgname/branch/$branchname/general-ledger/adjustment-entry'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerAdjustmentEntryRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(common)/(settings)/settings': {
      id: '/org/$orgname/branch/$branchname/(common)/(settings)/settings'
      path: '/settings'
      fullPath: '/org/$orgname/branch/$branchname/settings'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamecommonsettingsSettingsRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-classification': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-classification'
      path: '/maintenance/account-classification'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/account-classification'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-category': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(account-setup)/account-category'
      path: '/maintenance/account-category'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/account-category'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(access-and-onboarding)/invitation-code': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/maintenance/(access-and-onboarding)/invitation-code'
      path: '/maintenance/invitation-code'
      fullPath: '/org/$orgname/branch/$branchname/maintenance/invitation-code'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-types': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-types'
      path: '/members/member-types'
      fullPath: '/org/$orgname/branch/$branchname/members/member-types'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-occupation': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-occupation'
      path: '/members/member-occupation'
      fullPath: '/org/$orgname/branch/$branchname/members/member-occupation'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-group': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-group'
      path: '/members/member-group'
      fullPath: '/org/$orgname/branch/$branchname/members/member-group'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-gender': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-gender'
      path: '/members/member-gender'
      fullPath: '/org/$orgname/branch/$branchname/members/member-gender'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-department': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-department'
      path: '/members/member-department'
      fullPath: '/org/$orgname/branch/$branchname/members/member-department'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberDepartmentRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-classification': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-classification'
      path: '/members/member-classification'
      fullPath: '/org/$orgname/branch/$branchname/members/member-classification'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-center': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/members/member-center'
      path: '/members/member-center'
      fullPath: '/org/$orgname/branch/$branchname/members/member-center'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/quick-transfer/withdraw': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/quick-transfer/withdraw'
      path: '/transaction/quick-transfer/withdraw'
      fullPath: '/org/$orgname/branch/$branchname/transaction/quick-transfer/withdraw'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferWithdrawRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/quick-transfer/deposit': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/quick-transfer/deposit'
      path: '/transaction/quick-transfer/deposit'
      fullPath: '/org/$orgname/branch/$branchname/transaction/quick-transfer/deposit'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferDepositRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/maintenance/general-ledger-definition': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/maintenance/general-ledger-definition'
      path: '/transaction/maintenance/general-ledger-definition'
      fullPath: '/org/$orgname/branch/$branchname/transaction/maintenance/general-ledger-definition'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceGeneralLedgerDefinitionRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/maintenance/financial-statement-definition': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/maintenance/financial-statement-definition'
      path: '/transaction/maintenance/financial-statement-definition'
      fullPath: '/org/$orgname/branch/$branchname/transaction/maintenance/financial-statement-definition'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceFinancialStatementDefinitionRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(employee)/transaction/maintenance/cash-count': {
      id: '/org/$orgname/branch/$branchname/(employee)/transaction/maintenance/cash-count'
      path: '/transaction/maintenance/cash-count'
      fullPath: '/org/$orgname/branch/$branchname/transaction/maintenance/cash-count'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceCashCountRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
    '/org/$orgname/branch/$branchname/(maintenance)/(members)/member-profile/$memberId/$settings/': {
      id: '/org/$orgname/branch/$branchname/(maintenance)/(members)/member-profile/$memberId/$settings/'
      path: '/member-profile/$memberId/$settings'
      fullPath: '/org/$orgname/branch/$branchname/member-profile/$memberId/$settings'
      preLoaderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRouteImport
      parentRoute: typeof OrgOrgnameBranchBranchnameRouteRoute
    }
  }
}

interface landingPolicyRouteRouteChildren {
  landingPolicyAmlCtfPolicyRoute: typeof landingPolicyAmlCtfPolicyRoute
  landingPolicyCodeOfConductEthicsPolicyRoute: typeof landingPolicyCodeOfConductEthicsPolicyRoute
  landingPolicyComplaintHandlingAndDisputePolicyRoute: typeof landingPolicyComplaintHandlingAndDisputePolicyRoute
  landingPolicyCookiePolicyRoute: typeof landingPolicyCookiePolicyRoute
  landingPolicyDataProtectionPolicyRoute: typeof landingPolicyDataProtectionPolicyRoute
  landingPolicyDeveloperPolicyRoute: typeof landingPolicyDeveloperPolicyRoute
  landingPolicyFeeAndChargesPolicyRoute: typeof landingPolicyFeeAndChargesPolicyRoute
  landingPolicyKycPolicyRoute: typeof landingPolicyKycPolicyRoute
  landingPolicyPrivacyPolicyRoute: typeof landingPolicyPrivacyPolicyRoute
  landingPolicyRiskManagementPolicyRoute: typeof landingPolicyRiskManagementPolicyRoute
  landingPolicySecurityPolicyRoute: typeof landingPolicySecurityPolicyRoute
  landingPolicyTermsAndConditionRoute: typeof landingPolicyTermsAndConditionRoute
  landingPolicyTermsOfUseRoute: typeof landingPolicyTermsOfUseRoute
}

const landingPolicyRouteRouteChildren: landingPolicyRouteRouteChildren = {
  landingPolicyAmlCtfPolicyRoute: landingPolicyAmlCtfPolicyRoute,
  landingPolicyCodeOfConductEthicsPolicyRoute:
    landingPolicyCodeOfConductEthicsPolicyRoute,
  landingPolicyComplaintHandlingAndDisputePolicyRoute:
    landingPolicyComplaintHandlingAndDisputePolicyRoute,
  landingPolicyCookiePolicyRoute: landingPolicyCookiePolicyRoute,
  landingPolicyDataProtectionPolicyRoute:
    landingPolicyDataProtectionPolicyRoute,
  landingPolicyDeveloperPolicyRoute: landingPolicyDeveloperPolicyRoute,
  landingPolicyFeeAndChargesPolicyRoute: landingPolicyFeeAndChargesPolicyRoute,
  landingPolicyKycPolicyRoute: landingPolicyKycPolicyRoute,
  landingPolicyPrivacyPolicyRoute: landingPolicyPrivacyPolicyRoute,
  landingPolicyRiskManagementPolicyRoute:
    landingPolicyRiskManagementPolicyRoute,
  landingPolicySecurityPolicyRoute: landingPolicySecurityPolicyRoute,
  landingPolicyTermsAndConditionRoute: landingPolicyTermsAndConditionRoute,
  landingPolicyTermsOfUseRoute: landingPolicyTermsOfUseRoute,
}

const landingPolicyRouteRouteWithChildren =
  landingPolicyRouteRoute._addFileChildren(landingPolicyRouteRouteChildren)

interface landingRouteRouteChildren {
  landingPolicyRouteRoute: typeof landingPolicyRouteRouteWithChildren
  landingAboutRoute: typeof landingAboutRoute
  landingContactRoute: typeof landingContactRoute
  landingDevelopersRoute: typeof landingDevelopersRoute
  landingFrequentlyAskedQuestionsRoute: typeof landingFrequentlyAskedQuestionsRoute
  landingTestRoute: typeof landingTestRoute
  landingIndexRoute: typeof landingIndexRoute
  landingSubscriptionIndexRoute: typeof landingSubscriptionIndexRoute
}

const landingRouteRouteChildren: landingRouteRouteChildren = {
  landingPolicyRouteRoute: landingPolicyRouteRouteWithChildren,
  landingAboutRoute: landingAboutRoute,
  landingContactRoute: landingContactRoute,
  landingDevelopersRoute: landingDevelopersRoute,
  landingFrequentlyAskedQuestionsRoute: landingFrequentlyAskedQuestionsRoute,
  landingTestRoute: landingTestRoute,
  landingIndexRoute: landingIndexRoute,
  landingSubscriptionIndexRoute: landingSubscriptionIndexRoute,
}

const landingRouteRouteWithChildren = landingRouteRoute._addFileChildren(
  landingRouteRouteChildren,
)

interface AccountProfileRouteRouteChildren {
  AccountProfileActivityLogsRoute: typeof AccountProfileActivityLogsRoute
  AccountProfileProfileRoute: typeof AccountProfileProfileRoute
  AccountProfileQrRoute: typeof AccountProfileQrRoute
  AccountProfileSecurityRoute: typeof AccountProfileSecurityRoute
  AccountProfileIndexRoute: typeof AccountProfileIndexRoute
  AccountProfileVerifyContactRoute: typeof AccountProfileVerifyContactRoute
  AccountProfileVerifyEmailRoute: typeof AccountProfileVerifyEmailRoute
}

const AccountProfileRouteRouteChildren: AccountProfileRouteRouteChildren = {
  AccountProfileActivityLogsRoute: AccountProfileActivityLogsRoute,
  AccountProfileProfileRoute: AccountProfileProfileRoute,
  AccountProfileQrRoute: AccountProfileQrRoute,
  AccountProfileSecurityRoute: AccountProfileSecurityRoute,
  AccountProfileIndexRoute: AccountProfileIndexRoute,
  AccountProfileVerifyContactRoute: AccountProfileVerifyContactRoute,
  AccountProfileVerifyEmailRoute: AccountProfileVerifyEmailRoute,
}

const AccountProfileRouteRouteWithChildren =
  AccountProfileRouteRoute._addFileChildren(AccountProfileRouteRouteChildren)

interface AuthRouteRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpLazyRoute: typeof AuthSignUpLazyRoute
  AuthPasswordResetResetIdRoute: typeof AuthPasswordResetResetIdRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpLazyRoute: AuthSignUpLazyRoute,
  AuthPasswordResetResetIdRoute: AuthPasswordResetResetIdRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface OnboardingOrganizationRouteRouteChildren {
  OnboardingOrganizationOrganization_idRoute: typeof OnboardingOrganizationOrganization_idRoute
  OnboardingOrganizationIndexRoute: typeof OnboardingOrganizationIndexRoute
}

const OnboardingOrganizationRouteRouteChildren: OnboardingOrganizationRouteRouteChildren =
  {
    OnboardingOrganizationOrganization_idRoute:
      OnboardingOrganizationOrganization_idRoute,
    OnboardingOrganizationIndexRoute: OnboardingOrganizationIndexRoute,
  }

const OnboardingOrganizationRouteRouteWithChildren =
  OnboardingOrganizationRouteRoute._addFileChildren(
    OnboardingOrganizationRouteRouteChildren,
  )

interface OnboardingRouteRouteChildren {
  OnboardingOrganizationRouteRoute: typeof OnboardingOrganizationRouteRouteWithChildren
  OnboardingSetupOrgRoute: typeof OnboardingSetupOrgRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
  OnboardingCreateBranchOrganization_idRoute: typeof OnboardingCreateBranchOrganization_idRoute
}

const OnboardingRouteRouteChildren: OnboardingRouteRouteChildren = {
  OnboardingOrganizationRouteRoute:
    OnboardingOrganizationRouteRouteWithChildren,
  OnboardingSetupOrgRoute: OnboardingSetupOrgRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
  OnboardingCreateBranchOrganization_idRoute:
    OnboardingCreateBranchOrganization_idRoute,
}

const OnboardingRouteRouteWithChildren = OnboardingRouteRoute._addFileChildren(
  OnboardingRouteRouteChildren,
)

interface OrgOrgnameBranchBranchnameRouteRouteChildren {
  OrgOrgnameBranchBranchnameIndexRoute: typeof OrgOrgnameBranchBranchnameIndexRoute
  OrgOrgnameBranchBranchnamecommonDashboardRoute: typeof OrgOrgnameBranchBranchnamecommonDashboardRoute
  OrgOrgnameBranchBranchnameAccountingAccountsRoute: typeof OrgOrgnameBranchBranchnameAccountingAccountsRoute
  OrgOrgnameBranchBranchnameDevDocumentationRoute: typeof OrgOrgnameBranchBranchnameDevDocumentationRoute
  OrgOrgnameBranchBranchnamecommonsettingsSettingsRoute: typeof OrgOrgnameBranchBranchnamecommonsettingsSettingsRoute
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerAdjustmentEntryRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerAdjustmentEntryRoute
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerCashEntryRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCashEntryRoute
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckEntryRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckEntryRoute
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckVoucherRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckVoucherRoute
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerDepositEntryRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerDepositEntryRoute
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerGeneralLedgerRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerGeneralLedgerRoute
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalEntryRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalEntryRoute
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalVoucherRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalVoucherRoute
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerOnlineEntryRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerOnlineEntryRoute
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerPaymentEntryRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerPaymentEntryRoute
  OrgOrgnameBranchBranchnameemployeeGeneralLedgerWithdrawEntryRoute: typeof OrgOrgnameBranchBranchnameemployeeGeneralLedgerWithdrawEntryRoute
  OrgOrgnameBranchBranchnameemployeeTransactionDisbursementRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionDisbursementRoute
  OrgOrgnameBranchBranchnameemployeeTransactionDisbursementTransactionRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionDisbursementTransactionRoute
  OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute
  OrgOrgnameBranchBranchnameemployeeTransactionTestRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionTestRoute
  OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute
  OrgOrgnameBranchBranchnameemployeeTransactionTransactionsRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionTransactionsRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMemberAccountingLedgerRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberAccountingLedgerRoute
  OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute
  OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute: typeof OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute
  OrgOrgnameBranchBranchnameemployeeTransactionIndexRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionIndexRoute
  OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceCashCountRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceCashCountRoute
  OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceFinancialStatementDefinitionRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceFinancialStatementDefinitionRoute
  OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceGeneralLedgerDefinitionRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceGeneralLedgerDefinitionRoute
  OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferDepositRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferDepositRoute
  OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferWithdrawRoute: typeof OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferWithdrawRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberDepartmentRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberDepartmentRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute
  OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute: typeof OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute
  OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute: typeof OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute
}

const OrgOrgnameBranchBranchnameRouteRouteChildren: OrgOrgnameBranchBranchnameRouteRouteChildren =
  {
    OrgOrgnameBranchBranchnameIndexRoute: OrgOrgnameBranchBranchnameIndexRoute,
    OrgOrgnameBranchBranchnamecommonDashboardRoute:
      OrgOrgnameBranchBranchnamecommonDashboardRoute,
    OrgOrgnameBranchBranchnameAccountingAccountsRoute:
      OrgOrgnameBranchBranchnameAccountingAccountsRoute,
    OrgOrgnameBranchBranchnameDevDocumentationRoute:
      OrgOrgnameBranchBranchnameDevDocumentationRoute,
    OrgOrgnameBranchBranchnamecommonsettingsSettingsRoute:
      OrgOrgnameBranchBranchnamecommonsettingsSettingsRoute,
    OrgOrgnameBranchBranchnameemployeeGeneralLedgerAdjustmentEntryRoute:
      OrgOrgnameBranchBranchnameemployeeGeneralLedgerAdjustmentEntryRoute,
    OrgOrgnameBranchBranchnameemployeeGeneralLedgerCashEntryRoute:
      OrgOrgnameBranchBranchnameemployeeGeneralLedgerCashEntryRoute,
    OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckEntryRoute:
      OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckEntryRoute,
    OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckVoucherRoute:
      OrgOrgnameBranchBranchnameemployeeGeneralLedgerCheckVoucherRoute,
    OrgOrgnameBranchBranchnameemployeeGeneralLedgerDepositEntryRoute:
      OrgOrgnameBranchBranchnameemployeeGeneralLedgerDepositEntryRoute,
    OrgOrgnameBranchBranchnameemployeeGeneralLedgerGeneralLedgerRoute:
      OrgOrgnameBranchBranchnameemployeeGeneralLedgerGeneralLedgerRoute,
    OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalEntryRoute:
      OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalEntryRoute,
    OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalVoucherRoute:
      OrgOrgnameBranchBranchnameemployeeGeneralLedgerJournalVoucherRoute,
    OrgOrgnameBranchBranchnameemployeeGeneralLedgerOnlineEntryRoute:
      OrgOrgnameBranchBranchnameemployeeGeneralLedgerOnlineEntryRoute,
    OrgOrgnameBranchBranchnameemployeeGeneralLedgerPaymentEntryRoute:
      OrgOrgnameBranchBranchnameemployeeGeneralLedgerPaymentEntryRoute,
    OrgOrgnameBranchBranchnameemployeeGeneralLedgerWithdrawEntryRoute:
      OrgOrgnameBranchBranchnameemployeeGeneralLedgerWithdrawEntryRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionDisbursementRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionDisbursementRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionDisbursementTransactionRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionDisbursementTransactionRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionPaymentTypeRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionTestRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionTestRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionTransactionBatchRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionTransactionsRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionTransactionsRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMemberAccountingLedgerRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMemberAccountingLedgerRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersViewMembersRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceBanksRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceBillsAndCoinsRoute,
    OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute:
      OrgOrgnameBranchBranchnameemployeeApprovalsIndexRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionIndexRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionIndexRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceCashCountRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceCashCountRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceFinancialStatementDefinitionRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceFinancialStatementDefinitionRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceGeneralLedgerDefinitionRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionMaintenanceGeneralLedgerDefinitionRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferDepositRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferDepositRoute,
    OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferWithdrawRoute:
      OrgOrgnameBranchBranchnameemployeeTransactionQuickTransferWithdrawRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberCenterRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberClassificationRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberDepartmentRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberDepartmentRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGenderRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberGroupRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberOccupationRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMembersMemberTypesRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccessAndOnboardingInvitationCodeRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountCategoryRoute,
    OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute:
      OrgOrgnameBranchBranchnamemaintenanceMaintenanceaccountSetupAccountClassificationRoute,
    OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute:
      OrgOrgnameBranchBranchnamemaintenancemembersMemberProfileMemberIdSettingsIndexRoute,
  }

const OrgOrgnameBranchBranchnameRouteRouteWithChildren =
  OrgOrgnameBranchBranchnameRouteRoute._addFileChildren(
    OrgOrgnameBranchBranchnameRouteRouteChildren,
  )

interface OrgOrgnameRouteChildren {
  OrgOrgnameBranchBranchnameRouteRoute: typeof OrgOrgnameBranchBranchnameRouteRouteWithChildren
}

const OrgOrgnameRouteChildren: OrgOrgnameRouteChildren = {
  OrgOrgnameBranchBranchnameRouteRoute:
    OrgOrgnameBranchBranchnameRouteRouteWithChildren,
}

const OrgOrgnameRouteWithChildren = OrgOrgnameRoute._addFileChildren(
  OrgOrgnameRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  landingRouteRoute: landingRouteRouteWithChildren,
  AccountProfileRouteRoute: AccountProfileRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  OnboardingRouteRoute: OnboardingRouteRouteWithChildren,
  OrgOrgnameRoute: OrgOrgnameRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
