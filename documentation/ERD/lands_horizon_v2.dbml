// just a sample entity, and what we can reuse to all entity
// Table your_table_name {
  // id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]
  // created_at timestamp [not null, default: `now()`]
  // updated_at timestamp [not null, default: `now()`]
  // deleted_at timestamp
// }

enum user_type {
  "owner"
  "employee"
  "member"
}

// ✅
Table user {
  id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]

  media_id varchar(50) [ref: - media.id]

  api_key varchar(255) [not null, unique]

  password varchar(50) [not null]
  birthdate date

  user_name varchar(255) [not null, unique]
  first_name varchar(255)
  middle_name varchar(255)
  last_name varchar(255)
  full_name varchar(255)
  suffix varchar(255)

  email varchar(50) [unique, not null]
  is_email_verified boolean [default: false]

  contact_number varchar(50) [unique, not null]
  is_contact_verified boolean [default: false]

  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  deleted_at timestamp
}

// ✅
Table user_organization {
  id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]

  user_id varchar(50)
  organization_id varchar(50)

  user_type user_type

  accepted_at timestamp
  rejected_at timestamp

  description text

  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  deleted_at timestamp
}

Ref: user_organization.user_id > user.id [delete:restrict, update: cascade]
Ref: user_organization.organization_id > organization.id [delete:restrict, update: cascade]

Table invitation_code {
  id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]

  organization_id varchar(50)
  branch_id varchar(50)

  user_type user_type

  max_use integer // pag -1 means infinite usability, NOTE: but refer to expiry date instead
  current_use integer [default:0]

  expiry_date timestamp // if null, no expiry

  code varchar(50) [unique, not null]

  created_by varchar(50) [ref: - user.id]
  updated_by varchar(50) [ref: - user.id]

  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  deleted_at timestamp
}

Ref: invitation_code.organization_id > organization.id [delete:restrict]

enum organization_migration_status {
  pending
  migrating
  seeding
  completed
  canceled
  error
}

// ✅
Table organization {
  id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]

  media_id varchar(50) [ref: - media.id]
  cover_media_id varchar(50) [ref: - media.id]

  org_key varchar(255) [unique, not null]

  subscription_plan_id varchar(50)
  subscription_start_date timestamp
  subscription_end_date timestamp

  name varchar(255) [unique]
  description text

  longitude decimal
  latitude decimal

  database_name varchar(255)
  database_username varchar(255)
  database_password varchar(255)
  database_host varchar(255)
  database_port varchar(255)

  database_migration_status organization_migration_status
  database_remarks text

  email varchar(50) [unique, not null]
  contact_number varchar(50) [unique, not null]

  is_contact_verified boolean [default: false]

  color varchar(50)

  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  deleted_at timestamp
}

Ref: organization.subscription_plan_id > subscription_plan.id [delete:restrict, update: cascade]

// ✅
Table subscription_plan {
  id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]

  name varchar(255) [unique, not null]
  description text

  cost integer [unique, not null]
  timespan integer [default: 1209600000] // EX: 14 Days in ms 1209600000

  max_employees integer [not null, default: 3]// Coop maximum cap for their employees
  max_members_per_branch integer [not null, default: 10]// Coop maximum cap for their members
  max_branches integer [not null, default: 1]// Coop maximum cap for their branches

  discount decimal [default: 0] // %
  yearly_discount decimal [default: 0] // %

  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  deleted_at timestamp

  created_by_id varchar(50) [ref: - user.id]
  updated_by_id varchar(50) [ref: - user.id]
  deleted_by_id varchar(50) [ref: - user.id]
}

// Migration History
Table migration_history {
  id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]

  organization_id varchar(50)

  name varchar(50) // version | title
  description varchar(50)

  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  deleted_at timestamp

  created_by_id varchar(50) [ref: - user.id]
  updated_by_id varchar(50) [ref: - user.id]
  deleted_by_id varchar(50) [ref: - user.id]
}

Ref: migration_history.organization_id > organization.id [delete: restrict]

// Tracking usage
// Coop Usage entries Per Day ( this is system generated )
Table organization_usage_tracking_daily {
  id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]

  organization_id varchar(50) [ref: > organization.id]

  employees integer [not null, default: 0]
  members integer [not null, default: 0]
  branches integer [not null, default: 0]

  cash_transaction_count integer [not null, default: 0]
  check_transaction_count integer [not null, default: 0]
  online_transaction_count integer [not null, default: 0]

  // real money total
  cash_transaction decimal [not null, default: 0]
  check_transaction decimal [not null, default: 0]
  online_transaction decimal [not null, default: 0]

  // other usage
  total_email_sent integer
  total_message_sent integer
  total_uploads_size integer // file size
  total_report_render_time decimal// count of report generated

  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  deleted_at timestamp
}

// ✅
Table contact_number {
  id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]

  first_name varchar(255) [not null]
  last_name varchar(255) [not null]
  email varchar(255) [not null]
  contact_number varchar(15) [not null]
  description varchar(4096)

  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  deleted_at timestamp
}

// ✅
Table feedback {
  id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]

  email varchar(255)
  description text
  feedback_type feedback_type [not null, default: "general"]

  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  deleted_at timestamp
}

// ✅
Table media {
  id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]

  description varchar(255)
  file_name varchar(255) [not null]
  file_size number [not null]
  file_type varchar(255) [not null]
  storage_key varchar(255) [not null]
  bucket_name varchar(255) [not null]

  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  deleted_at timestamp

  created_by_id varchar(50) [ref: - user.id]
  updated_by_id varchar(50) [ref: - user.id]
  deleted_by_id varchar(50) [ref: - user.id]
}

enum notification_type {
  "info"
  "report"
}

// ✅
Table notification {
  id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]

  user_id varchar(50)

  title varchar(255)
  description varchar(255) [not null]

  is_viewed boolean [default: false]

  created_at timestamp [not null, default: `now()`]
  created_by_id varchar(50) [ref: - user.id]
}

Ref: notification.user_id > user.id [delete:cascade, update:cascade]

enum report_status {
  pending
  completed
  canceled
  error
}

//
Table generated_report {
  id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]

  user_id varchar(50)
  media_id varchar(50)
  organization_id varchar(50)

  name varchar(255)
  description varchar(255) [not null]

  status report_status [default: "pending"]
  progress decimal [default: 0]

  created_at timestamp [not null, default: `now()`]
  created_by_id varchar(50) [ref: - user.id]
}

Ref: generated_report.user_id > user.id [delete:cascade, update:restrict]
Ref: generated_report.media_id > media.id [delete:cascade, update:restrict]
Ref: generated_report.organization_id > organization.id [delete:cascade, update:restrict]

Table organization_post {
  id varchar(50) [primary key, unique, default: `uuid_generate_v4()`]

  organization_id varchar(50)
  media_id varchar(50)

  description text

  created_by_id varchar(50) [ref: - user.id]
  updated_by_id varchar(50) [ref: - user.id]
  deleted_by_id varchar(50) [ref: - user.id]

  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  deleted_at timestamp
}


